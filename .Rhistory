data.sp.coefs.r2
data.sp.coefs.r2 <- data.sp.coefs.r2[c(11,5,10,1,16,15,12:14,2:4,8:9,6:7),]
data.sp.coefs.r2
data.coefs.r2 <- round(data.coefs.r2,2)
data.coefs.r2
data.sp.coefs.r2 <- round(data.coefs.r2,2)
data.sp.coefs.r2
dimnames(species.lms)
dimnames(herb.traits)
require(relaimpo)
species.trait.relaimpos = list()
#species.trait.totalR2 = vector()
#species.trait.sizeR2 = vector()
species.trait.coefs = list()
for(i in 1:length(species.lms)){
species.trait.obj <- calc.relimp(species.lms[ ,i] ~ ., data = herb.traits)#, always = "log_size") # not partialling out log_size first
species.trait.relaimpos[[i]] = species.trait.obj@lmg
#species.trait.totalR2[i] = species.trait.obj@R2
#species.trait.sizeR2[i] = species.trait.obj@R2 - species.trait.obj@R2.decomp
species.trait.coefs[[i]] = apply(species.trait.obj@ave.coeffs, MARGIN=1, FUN=mean) # take average of all averaged coefficients for different sized models.
}
species.trait.relaimpos.data <- as.data.frame(species.trait.relaimpos)
colnames(species.trait.relaimpos.data) <- colnames(species.lms)
species.trait.relaimpos.data
species.trait.relaimpos.data <- as.data.frame(species.trait.relaimpos)
colnames(species.trait.relaimpos.data) <- colnames(species.lms)
#species.trait.relaimpos.data <- rbind.data.frame(species.trait.relaimpos.data, species.trait.totalR2) # currently excluding to focus on other traits
#rownames(species.trait.relaimpos.data)[16] <- "total R2 with log(plant size)"
species.trait.relaimpos.data = species.trait.relaimpos.data*100 # interpret in terms of percent variance explained
species.trait.relaimpos.data = transform(species.trait.relaimpos.data, traits = rownames(species.trait.relaimpos.data))
sp.melt.relaimpos <- melt(species.trait.relaimpos.data, value.name="r2")
species.trait.coefs.data <- as.data.frame(species.trait.coefs)
colnames(species.trait.coefs.data) <- colnames(species.lms)
species.trait.coefs.data <- transform(species.trait.coefs.data, traits = rownames(species.trait.coefs.data))
sp.melt.coefs <- melt(species.trait.coefs.data, value.name="coefs")
#acast(melt.coefs, traits ~ variable)
# combine coeficients and r2 values
sp.join.coefs.r2 = join(sp.melt.coefs, sp.melt.relaimpos)
sp.melt.coefs.r2 = melt(sp.join.coefs.r2)
colnames(sp.melt.coefs.r2)[3] <- "coefs.r2"
a.sp.coefs.r2 <- acast(sp.melt.coefs.r2, traits ~ coefs.r2 ~ variable)
data.sp.coefs.r2 <- as.data.frame(a.sp.coefs.r2)
data.sp.coefs.r2
data.sp.coefs.r2 <- round(data.sp.coefs.r2,2)
coef.r2.row <- rep(c("coef","R^2^"),6)
sp.table.relaimpo <- rbind.data.frame(coef.r2.row, data.sp.coefs.r2)
sp.table.relaimpo <- transform(sp.table.relaimpo, Variable = rownames(sp.table.relaimpo))
sp.table.relaimpo <- data.frame(Plant.traits = c("","Plant size^1^","Density^3^","Height^3^","C:N","Water content","SLA^3^","Trichomes^2^","Sal-Tan. PC1","Sal-Tan. PC2","Cinn. PC1","Cinn. PC2","Cinn. PC3", "FlavonOLE PC1","FlavonOLE PC2","FlavanonOLE PC1","FlavanonOLE PC2"), table.relaimpo[,1:12])
rownames(sp.table.relaimpo) <- NULL
sp.table.relaimpo
dim(sp.table.relaimpo)
colnames(sp.table.relaimpo)[2:13] <- sp.header.names
sp.header.names <- c("*Iteomyia*^2^","1","*Aculus*^2^","2","*Tachyerges*^2^","3","*Caloptilia*^1^","4", "Chyrsomelid sp. 1^2^","5", "Cicadellidae nymph sp. 1^2^","6") # ^1^ = square root
colnames(sp.table.relaimpo)[2:13] <- sp.header.names
pandoc.table(sp.table.relaimpo, emphasize.cols=1, split.tables=Inf)#, split.cells=18)#, justify=c("right",rep("centre",12)))
#### Begin formatting for table
species.trait.relaimpos.data <- as.data.frame(species.trait.relaimpos)
colnames(species.trait.relaimpos.data) <- colnames(species.lms)
#species.trait.relaimpos.data <- rbind.data.frame(species.trait.relaimpos.data, species.trait.totalR2) # currently excluding to focus on other traits
#rownames(species.trait.relaimpos.data)[16] <- "total R2 with log(plant size)"
species.trait.relaimpos.data = species.trait.relaimpos.data*100 # interpret in terms of percent variance explained
species.trait.relaimpos.data = transform(species.trait.relaimpos.data, traits = rownames(species.trait.relaimpos.data))
sp.melt.relaimpos <- melt(species.trait.relaimpos.data, value.name="r2")
species.trait.coefs.data <- as.data.frame(species.trait.coefs)
colnames(species.trait.coefs.data) <- colnames(species.lms)
species.trait.coefs.data <- transform(species.trait.coefs.data, traits = rownames(species.trait.coefs.data))
sp.melt.coefs <- melt(species.trait.coefs.data, value.name="coefs")
#acast(melt.coefs, traits ~ variable)
# combine coeficients and r2 values
sp.join.coefs.r2 = join(sp.melt.coefs, sp.melt.relaimpos)
sp.melt.coefs.r2 = melt(sp.join.coefs.r2)
colnames(sp.melt.coefs.r2)[3] <- "coefs.r2"
a.sp.coefs.r2 <- acast(sp.melt.coefs.r2, traits ~ coefs.r2 ~ variable)
data.sp.coefs.r2 <- as.data.frame(a.sp.coefs.r2)
# reorder rows
data.sp.coefs.r2 <- data.sp.coefs.r2[c(11,5,10,1,16,15,12:14,2:4,8:9,6:7),]
# round data
data.sp.coefs.r2 <- round(data.sp.coefs.r2,2)
# create new rows
coef.r2.row <- rep(c("coef","R^2^"),6)
sp.header.names <- c("*Iteomyia*^2^","1","*Aculus*^2^","2","*Tachyerges*^2^","3","*Caloptilia*^1^","4", "Chyrsomelid sp. 1^2^","5", "Cicadellidae nymph sp. 1^2^","6") # ^1^ = square root
sp.table.relaimpo <- rbind.data.frame(coef.r2.row, data.sp.coefs.r2)
sp.table.relaimpo <- transform(sp.table.relaimpo, Variable = rownames(sp.table.relaimpo))
sp.table.relaimpo
dimnames(sp.table.relaimpo)
sp.table.relaimpo <- data.frame(Plant.traits = c("","Plant size^1^","Density^3^","Height^3^","C:N","Water content","SLA^3^","Trichomes^2^","Sal-Tan. PC1","Sal-Tan. PC2","Cinn. PC1","Cinn. PC2","Cinn. PC3", "FlavonOLE PC1","FlavonOLE PC2","FlavanonOLE PC1","FlavanonOLE PC2"), table.relaimpo[,1:12])
rownames(sp.table.relaimpo) <- NULL
sp.table.relaimpo
#### Begin formatting for table
species.trait.relaimpos.data <- as.data.frame(species.trait.relaimpos)
colnames(species.trait.relaimpos.data) <- colnames(species.lms)
#species.trait.relaimpos.data <- rbind.data.frame(species.trait.relaimpos.data, species.trait.totalR2) # currently excluding to focus on other traits
#rownames(species.trait.relaimpos.data)[16] <- "total R2 with log(plant size)"
species.trait.relaimpos.data = species.trait.relaimpos.data*100 # interpret in terms of percent variance explained
species.trait.relaimpos.data = transform(species.trait.relaimpos.data, traits = rownames(species.trait.relaimpos.data))
sp.melt.relaimpos <- melt(species.trait.relaimpos.data, value.name="r2")
species.trait.coefs.data <- as.data.frame(species.trait.coefs)
colnames(species.trait.coefs.data) <- colnames(species.lms)
species.trait.coefs.data <- transform(species.trait.coefs.data, traits = rownames(species.trait.coefs.data))
sp.melt.coefs <- melt(species.trait.coefs.data, value.name="coefs")
#acast(melt.coefs, traits ~ variable)
# combine coeficients and r2 values
sp.join.coefs.r2 = join(sp.melt.coefs, sp.melt.relaimpos)
sp.melt.coefs.r2 = melt(sp.join.coefs.r2)
colnames(sp.melt.coefs.r2)[3] <- "coefs.r2"
a.sp.coefs.r2 <- acast(sp.melt.coefs.r2, traits ~ coefs.r2 ~ variable)
data.sp.coefs.r2 <- as.data.frame(a.sp.coefs.r2)
# reorder rows
data.sp.coefs.r2 <- data.sp.coefs.r2[c(11,5,10,1,16,15,12:14,2:4,8:9,6:7),]
# round data
data.sp.coefs.r2 <- round(data.sp.coefs.r2,2)
# create new rows
coef.r2.row <- rep(c("coef","R^2^"),6)
sp.header.names <- c("*Iteomyia*^2^","1","*Aculus*^2^","2","*Tachyerges*^2^","3","*Caloptilia*^1^","4", "Chyrsomelid sp. 1^2^","5", "Cicadellidae nymph sp. 1^2^","6") # ^1^ = square root
#
sp.table.relaimpo <- rbind.data.frame(coef.r2.row, data.sp.coefs.r2)
sp.table.relaimpo <- transform(sp.table.relaimpo, Variable = rownames(sp.table.relaimpo))
sp.table.relaimpo <- data.frame(Plant.traits = c("","Plant size^1^","Density^3^","Height^3^","C:N","Water content","SLA^3^","Trichomes^2^","Sal-Tan. PC1","Sal-Tan. PC2","Cinn. PC1","Cinn. PC2","Cinn. PC3", "FlavonOLE PC1","FlavonOLE PC2","FlavanonOLE PC1","FlavanonOLE PC2"), sp.table.relaimpo[,1:12])
rownames(sp.table.relaimpo) <- NULL
sp.table.relaimpo
colnames(sp.table.relaimpo)[2:13] <- sp.header.names
sp.table.relaimpo
pandoc.table(sp.table.relaimpo, emphasize.cols=1, split.tables=Inf)#, split.cells=18)#, justify=c("right",rep("centre",12)))
library('rmarkdown')
render(input = "~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/tables/species.trait.relaimpo.Rmd", word_document(reference_docx="~/Documents/Genotype_Willow_Community/reference_proposal.docx"))
source('~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/arthropods_&_traits/herb_trait_manage.r')
dimnames(herb.com)
species.com.log <- data.frame(log_vLG = log(herb.com$vLG+1), log_mLG = log(herb.com$mLG+1), log_curc1 = log(herb.com$Curculionid_1+1), log_LTF = log(herb.com$LTF+1), log_chrys1 = log(herb.com$Chrysomelidae_1+1), log_cicnymph = log(herb.com$Cicadellidae_nymph_1+1))
species.com.resid <- data.frame(resid_vLG = resid(lm(species.com.log$log_vLG ~ log(herb.com$Total_Area))), resid_mLG = resid(lm(species.com.log$log_mLG~log(herb.com$Total_Area))), resid_curc1 = resid(lm(species.com.log$log_curc1~log(herb.com$Total_Area))), resid_LTF = resid(lm(species.com.log$log_LTF~log(herb.com$Total_Area))), resid_chrys1 = resid(lm(species.com.log$log_chrys1~log(herb.com$Total_Area))), resid_cicnymph = resid(lm(species.com.log$log_cicnymph~log(herb.com$Total_Area))))
species.com.cors <- corr.test(species.com.resid, method="spearman")
library(psych)
species.com.cors <- corr.test(species.com.resid, method="spearman")
species.com.cors$r[upper.tri(species.com.cors$r, diag=FALSE)] <- NA
species.com.cors$p[upper.tri(species.com.cors$p, diag=TRUE)] <- NA
species.cors = round(data.frame(species.com.cors$r),2)
species.cors
colnames(herb.cors) <- c("*Iteomyia*^2^","*Aculus*^2^","*Tachyerges*^2^","*Caloptilia*^1^", "Chyrsomelid sp. 1^2^", "Cicadellidae nymph sp. 1^2^")
colnames(species.cors) <- c("*Iteomyia*^2^","*Aculus*^2^","*Tachyerges*^2^","*Caloptilia*^1^", "Chyrsomelid sp. 1^2^", "Cicadellidae nymph sp. 1^2^")
rownames(species.cors) <-  c("*Iteomyia*^2^","*Aculus*^2^","*Tachyerges*^2^","*Caloptilia*^1^", "Chyrsomelid sp. 1^2^", "Cicadellidae nymph sp. 1^2^")
scatterplotMatrix(species.com.log, main="Log-transformed data")
scatterplotMatrix(species.com.resid, main="resid-transformed data")
set.alignment(default = "centre", row.names="right")
pandoc.table(species.cors, digits=2, emphasize.strong.cells = which(species.com.cors$p < 0.05, arr.ind=TRUE), split.tables=Inf) # highlight significant correlations
species.com.cors <- corr.test(species.com.log, method="spearman")
species.com.cors$r[upper.tri(species.com.cors$r, diag=FALSE)] <- NA
species.com.cors$p[upper.tri(species.com.cors$p, diag=TRUE)] <- NA
species.cors = round(data.frame(species.com.cors$r),2)
colnames(species.cors) <- c("*Iteomyia*^2^","*Aculus*^2^","*Tachyerges*^2^","*Caloptilia*^1^", "Chyrsomelid sp. 1^2^", "Cicadellidae nymph sp. 1^2^")
rownames(species.cors) <-  c("*Iteomyia*^2^","*Aculus*^2^","*Tachyerges*^2^","*Caloptilia*^1^", "Chyrsomelid sp. 1^2^", "Cicadellidae nymph sp. 1^2^")
pandoc.table(species.cors, digits=2, emphasize.strong.cells = which(species.com.cors$p < 0.05, arr.ind=TRUE), split.tables=Inf) # highlight significant correlations
species.com.cors <- corr.test(species.com.resid, method="spearman")
library('rmarkdown')
render(input = "~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/tables/species_corr_table.Rmd", word_document(reference_docx="~/Documents/Genotype_Willow_Community/reference_proposal.docx"))
dimnames(herb.com.trait)
vLG.mr <- lm(log_vLG ~ log_size + C_N_imputed + water_content, herb.com.trait)
summary(vLG.mr)
vLG.mr <- lm(log_vLG ~ log_size + C_N_imputed + water_content + cinn.PC3, herb.com.trait)
summary(vLG.mr)
vLG.mr <- lm(log_vLG ~ log_size + C_N_imputed + water_content, herb.com.trait)
summary(vLG.mr)
lm.sumSquares(vLG.mr)
curc1.mr <- lm(log_curc1 ~ log_size + density_resid + cinn.PC1, herb.com.trait)
summary(curc1.mr)
lm.sumSquares(curc1.mr)
summary(lm(log_curc1 ~ ., herb.com.trait))
dimnames(herb.traits)
summary(lm(log_curc1 ~ ., herb.traits))
summary(lm(herb.com.trait$log_curc1 ~ ., herb.traits))
curc1.mr <- lm(log_curc1 ~ log_size + density_resid + cinn.PC1 + sal_tannin.PC2 + flavanonOLES.PC1, herb.com.trait)
summary(curc1.mr)
lm.sumSquares(curc1.mr)
summary(curc1.mr)
curc1.mr <- lm(log_curc1 ~ log_size + density_resid + cinn.PC1 + sal_tannin.PC2, herb.com.trait)
summary(curc1.mr)
lm.sumSquares(curc1.mr)
library(vegan)
source('~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/arthropods_&_traits/herb_trait_manage.r')
aov(Total_Area ~ Genotype, herb.com.traits)
aov(Total_Area ~ Genotype, complete.data)
size.anova <- aov(Total_Area ~ Genotype, complete.data)
summary(size.anova)
size.anova <- summary(aov(Total_Area ~ Genotype, complete.data))
str(size.anova)
size.anova
rownames(size.anova)
names(size.anova)
str(size.anova)
size.anova
size.anova$"F value"
size.anova <- anova(aov(Total_Area ~ Genotype, complete.data))
rownames(size.anova)
get(paste("size_anova"))$"F value"
get(paste("size.anova"))$"F value"
aggregate(Total_Area,by=Genotype, mean)
aggregate(Total_Area,by=Genotype, data=complete.data, mean)
aggregate(Total_Area,by=Genotype, data=complete.data, FUN = mean)
dimnames(complete.data)
aggregate(Total_Area ~ Genotype, FUN = mean, data = complete.data)
aggregate(Total_Area ~ Genotype, FUN = mean, data = complete.data)[,2]
min(aggregate(Total_Area ~ Genotype, FUN = mean, data = complete.data)[,2])
max(aggregate(Total_Area ~ Genotype, FUN = mean, data = complete.data)[,2])
min_max <- function(y,x){
cbind.data.frame(min(aggregate(y ~ x, FUN = mean)[,2]), max(aggregate(y ~ x, FUN = mean,)[,2]))
}
min_max(complete.data$Total_Area ~ complete.data$Genotype)
min_max(complete.data$Total_Area, complete.data$Genotype)
min_max <- function(y,x = complete.data$Genotype){
data.frame(min = min(aggregate(y ~ x, FUN = mean)[,2]), max = max(aggregate(y ~ x, FUN = mean,)[,2]))
}
min_max(complete.data$Total_Area)
min_max <- function(y,x = complete.data$Genotype){
data.frame(min = min(aggregate(y ~ x, FUN = mean)[,2]), max = max(aggregate(y ~ x, FUN = mean,)[,2]))
}
anova_table <- function(name, model, N, min_max){
gen.var = (get(paste("model"))$"Mean Sq F"[1] - get(paste("model"))$"Mean Sq F"[2])/N
data.frame(Response = name, Variable = rownames(get(paste("model")))[-2], Min = min_max[,1], Max = min_max[ ,2], F = get(paste("model"))$"F value"[1], P = get(paste("model"))$"Pr(>F)"[1], H2 = gen.var/(gen.var + get(paste("model"))$"Mean Sq F"[2])
}
anova_table <- function(name, model, N, min_max){
gen.var = (get(paste("model"))$"Mean Sq F"[1] - get(paste("model"))$"Mean Sq F"[2])/N
data.frame(Response = name, Variable = rownames(get(paste("model")))[-2], Min = min_max[,1], Max = min_max[ ,2], F = get(paste("model"))$"F value"[1], P = get(paste("model"))$"Pr(>F)"[1], H2 = gen.var/(gen.var + get(paste("model"))$"Mean Sq F"[2]))
}
min_max <- function(y,x = complete.data$Genotype){
data.frame(min = min(aggregate(y ~ x, FUN = mean)[,2]), max = max(aggregate(y ~ x, FUN = mean,)[,2]))
}
size.min_max <- min_max(complete.data$Total_Area)
table(complete.data$Total_Area, complete.data$Genotype)
aggregate(complete.data$Total_Area ~ complete.data$Genotype, FUN = count)
na.omit(cbind(complete.data$Total_Area, complete.data$Genotype))
dim(na.omit(cbind(complete.data$Total_Area, complete.data$Genotype)))
count(na.exclude(cbind(complete.data$Total_Area, complete.data$Genotype)))
weight_N <- function(y){
G = complete.data$Genotype
count(na.exclude(cbind(y,G)), vars = "G")
}
weight_N(complete.data$Total_Area)
weight_N <- function(y){
G = complete.data$Genotype
count(na.exclude(data.frame(y = y,G = G)), vars = "G")
}
weight_N(complete.data$Total_Area)
weight_N <- function(y){
G = complete.data$Genotype
counts = count(na.exclude(data.frame(y = y,G = G)), vars = "G")
weighted.mean(counts[,2])
}
weight_N(complete.data$Total_Area)
library(bipartite)
library(cheddar)
data(TL84)
TL84
NPS(TL84)
head(TL84)
data(pHWebs)
head(pHWebs)
print(pHWebs)
pHWebs
NumberOfConsumers(pHWebs)
str(pHWebs)
library(vegan)
decostand
t <- matric(c(1,4,3,5),nrow=2)
t <- matrix(c(1,4,3,5),nrow=2)
t
decostand(t, "norm")
1/10
1/16
0.1^2
0.6^2
sqrt(10)
1/3.162278
0.316227^2
0.9486833^2
0.316227^2+0.9
install.packages("LargeRegression")
library("lars", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("robustHD")
library("bipartite", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
t <- matric(c(1,1,1,1), nrow=2)
t <- matrix(c(1,1,1,1), nrow=2)
library(bipartite)
networklevel(t)
t
t <- matrix(c(0.5,0.5,0.5,0.5), nrow=2)
t1 <- matrix(c(0.5,0.5,0.5,0.5), nrow=2)
networklevel(t1)
diversity(t1)
exp(0.69)
diversity(1)
exp(0)
t2 <- matrix(c(1,2,1,1), nrow=2)
t2
networklevel(t2)
t2 <- matrix(c(0,2,1,1), nrow=2)
t2
networklevel(t2)
t2
exp(diversity(c(1,1)))
exp(diversity(c(0,2)))
t2 <- matrix(c(0,2,0,1), nrow=2)
networklevel(t2)
t2 <- matrix(c(0,2,0,1), nrow=2, empty.web=FALSE)
networklevel(t2, empty.web=FALSE)
t2
exp(diversity(c(0,2)))
exp(diversity(c(0,1)))
exp(diversity(c(0,3)))
exp(diversity(c(0,10)))
exp(diversity(c(2,1)))
exp(diversity(c(0,0)))
mean(c(1.889882,1))
t2 <- matrix(c(0,2,0,1), nrow=1)
t2
networklevel(t2)
exp(diversity(0,2,0,1))
exp(diversity(c(0,2,0,1)))
mean(c(0,1,0,1))
networklevel(t2, empty.web=FALSE)
warnings()
t2 <- matrix(c(0,2,0,1), nrow=4)
t2
networklevel(t2, empty.web=FALSE)
t3 <- matric(c(1))
t3 <- matrix(c(1))
t3
networklevel(t3)
library("igraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
##############################################################################
# Description: This script organizes and manages data collected in the fall of
#              2012 in the willow garden at HBNWR in Eureka, California.
#
# Manager: Matt Barbour
# Email: barbour@zoology.ubc.ca
##############################################################################
##### Data management
# load required libraries
library(reshape)
library(reshape2)
library(ggplot2)
library(bipartite)
library(plyr)
library(car) # for scatterplot matrices
# source in required functions
source('~/Documents/miscellaneous_R/community_explore.R')
# other functions
empty.col = function(web){
# based on "empty" function for bipartite
cempty <- which(colSums(web) == 0)
rempty <- which(rowSums(web) == 0)
cind <- if (length(cempty) == 0)
1:NCOL(web)
else (1:NCOL(web))[-cempty]
rind <- if (length(rempty) == 0)
1:NROW(web)
else (1:NROW(web))#[-rempty] # attempting to prevent it from removing empty rows.
out <- web[rind, cind, drop = FALSE]
return(out)
}
network_metrics <- function(web){
# this code was adapted from the "bipartite" package's "networklevel" function. I had to create my own code, because some of my food web matrices are too small for the "networklevel" function to handle, and since I would be calculating a lot of these, I wanted it to be repeatable.
preytot.mat <- matrix(rep(colSums(web), NROW(web)),
NROW(web), byrow = TRUE)
preyprop.mat <- web/preytot.mat
predtot.mat <- matrix(rep(rowSums(web), NCOL(web)),
NROW(web), byrow = FALSE)
predprop.mat <- web/predtot.mat
H_Nk <- apply(preyprop.mat, 2, function(x) -sum(x * log(x), na.rm = TRUE))
H_Pk <- apply(predprop.mat, 1, function(x) -sum(x * log(x), na.rm = TRUE))
n_Nk <- ifelse(colSums(web) != 0, exp(H_Nk),   0)
n_Pk <- ifelse(rowSums(web) != 0, exp(H_Pk),     0)
V <- sum(rowSums(web)/sum(web) * n_Pk) # vulnerability
G <- sum(colSums(web)/sum(web) * n_Nk) # generality
LD_q <- 0.5 * (V + G) # linkage density
connect_wt <- LD_q/sum(dim(web)) # weighted connectance
preyRich <- NROW(web) # prey richness
predRich <- NCOL(web) # predator richness
out <- data.frame(V = V, G = G, LD_q = LD_q, connect_wt = connect_wt, preyRich = preyRich, predRich = predRich, totRich = preyRich + predRich)
return(out)
}
# set working directory
setwd(dir='~/Documents/Genotype_Networks/')
# upload gall network data
Gall_Network_Data_Survey_2_2012 <- read.csv("~/Documents/Genotype_Networks/data/Gall_Network_Data_Survey_2_raw.csv", skip=1, stringsAsFactors = FALSE, strip.white = TRUE)
# view data structure
str(Gall_Network_Data_Survey_2_2012)
dimnames(Gall_Network_Data_Survey_2_2012)
# upload plant position data with details on plant identity to eventually merge with gall network data
plant.position.info <- read.csv("~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/Willow Garden Positions.csv")
plant.position.info <- plant.position.info[ ,c("Plant.Position","Genotype","Gender")]
# replaces all NAs in gall contentx matrix with zeros.  These are biologically meaningful zeros and do not represent missing data.
## May need to combine inq.dam category with exit hole
g.contents_matrix <- as.matrix(subset(Gall_Network_Data_Survey_2_2012, select = vLG.pupa:exit.hole))
str(g.contents_matrix)
g.contents_matrix[is.na(g.contents_matrix)] <- 0
# merge the updated gall content matrix back with the original survey data
gall_net <- cbind.data.frame(Gall_Network_Data_Survey_2_2012[ ,c("survey","plant.position","gall.id","g.id.unk","gall.sp","g.sp.unsure","g.height","g.width","g.3meas","point.count", "exit.size")], g.contents_matrix) # excludes "need.to.review" and "notes" from original data
# merge the gall network data and plant position information
gall_net <- merge(gall_net, plant.position.info, by.x="plant.position", by.y="Plant.Position")
gall_net <- transform(gall_net, plant.position.new = paste("pp",plant.position,sep=""))
# transform the data to focus on the parasitoid community only and melt it for easy data summaries
gall_net_trans = data.frame(pp = gall_net$plant.position.new, Genotype = gall_net$Genotype, Gender = gall_net$Gender, gall.sp = gall_net$gall.sp, Eury.tot = gall_net$Eury.mal + gall_net$Eury.fem, Tory.tot = gall_net$Tory.mal + gall_net$Tory.fem, Meso.tot = gall_net$Mesopol + gall_net$Ptero.2, Eulo.tot = gall_net$Eulo.fem + gall_net$Eulo.mal, Lathro.tot = gall_net$Lathro.fem + gall_net$Lathro.mal, Lestodip = gall_net$Lestodip, Platy = gall_net$Platy, Mymarid = gall_net$Mymarid, g.total = rowSums(subset(gall_net, select = vLG.pupa:nothing))) # do I need to include exit.hole in this?
gall_net_melt <- melt(gall_net_trans, id.vars = c("Genotype","Gender","pp","gall.sp")) # preserve zeros for network analysis, because they identify herbivores that were present, just not connected to any parasitoids.
# Regional-scale network (all tree samples summed together). need to eliminate some duplicates or even singletons in the dataset
total_net <- dcast(gall_net_melt, gall.sp ~ variable, sum)
rownames(total_net) <- total_net[ ,1]
total_net <- total_net[,-1] # remove gall.sp
gall_abunds <- total_net[,"g.total"]
names(gall_abunds) <- rownames(total_net)
visweb(total_net[,-9], type="diagonal")
plotweb(total_net[,-9], low.abun = gall_abunds - rowSums(total_net[,-9]), abuns.type = "additional")
networklevel(total_net[,-10])
# Gall-parasitoid network for each genotype (sum all samples within genotype)
geno_net <- cast(gall_net_melt, gall.sp ~ variable | Genotype, sum)
geno_net <- geno_net[c(1:3,5:27)]# remove genotype C as it was never part of the dataset
geno_net_new <- list()
for(i in 1:length(geno_net)){
tmp <- geno_net[[i]][,-c(1,10)] # remove gall.sp and g.total rows
geno_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(geno_net_new[[i]]) <- geno_net[[i]][,1]
} # empty.col functions removes parasitoids with no interactions but preserves basal species that were observed in the network.
geno_net_metrics <- list()
for(i in 1:length(geno_net_new)){
geno_net_metrics[[i]] <- network_metrics(as.matrix(geno_net_new[[i]]))
}
geno_net_data <- ldply(geno_net_metrics)
geno_net_data <- transform(geno_net_data, Geno.ID = c("*","A","B",LETTERS[4:26]), pred.preyRich = predRich/preyRich)
scatterplotMatrix(geno_net_data[,c(1:7,9)])
### Create networks for each plant position
pp_net <- cast(gall_net_melt, gall.sp ~ variable | pp, sum)
pp_ptoid.comm <- dcast(gall_net_melt, pp ~ variable, sum)
pp_gall.comm <- dcast(gall_net_melt, pp ~ gall.sp, sum)
pp_net_new <- list()
for(i in 1:length(pp_net)){
tmp <- pp_net[[i]][,-c(1,10)] # remove gall.sp and g.total
pp_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(pp_net_new[[i]]) <- pp_net[[i]][,1]
} # empty.col functions removes parasitoids with no interactions but preserves basal species that were observed in the network.
pp_net_metrics <- list()
for(i in 1:length(pp_net_new)){
pp_net_metrics[[i]] <- network_metrics(as.matrix(pp_net_new[[i]]))
}
pp_net_data <- ldply(pp_net_metrics)
# run for loop to extract plant position ID from all networks
pp <- vector()
for(i in 1:length(pp_net)){
pp[i] <- names(pp_net[i])
}
pp_net_data_trans <- transform(pp_net_data, pp = pp, pred.preyRich = predRich/preyRich) # add plant position ID
# merge Gender and Genotype info into pp_net_data. Add some new variables too.
pp.info <- data.frame(pp = paste("pp",plant.position.info$Plant.Position,sep=""),Geno.ID = plant.position.info$Genotype, Sex = plant.position.info$Gender)
# create list of all dataframes
pp_dfs = list(pp_net_data_trans, pp.info, pp_ptoid.comm, pp_gall.comm)
pp_net_data_merge <- join_all(pp_dfs, by="pp")
pp_net_data_merge <- transform(pp_net_data_merge, connect_wt_NAzero = connect_wt)
pp_net_data_merge$connect_wt_NAzero[which(is.nan(pp_net_data_merge$connect_wt_NAzero))] <- 0 # since these values had galls but no observed parasitoids, I believe the connectance should be zero...
### explore data
pp_net_summary <- ddply(pp_net_data_merge, .(Geno.ID), summarize, mean_gallRich = mean(preyRich), mean_ptoidRich = mean(predRich))
max(pp_net_summary$mean_gallRich)
min(pp_net_summary$mean_gallRich)
max(pp_net_summary$mean_ptoidRich)
min(pp_net_summary$mean_ptoidRich)
plot(totRich ~ Geno.ID, pp_net_data_merge)
plot(preyRich ~ Geno.ID, pp_net_data_merge)
plot(predRich ~ Geno.ID, pp_net_data_merge)
plot(connect_wt ~ Geno.ID, pp_net_data_merge) # likely too few data points at the individual tree level to adequately examine this.
plot(connect_wt_NAzero ~ Geno.ID, pp_net_data_merge)
hist(pp_net_data_merge$connect_wt_NAzero)
hist(pp_net_data_merge$connect_wt)
totRich.glm <- glm(totRich ~ Geno.ID, pp_net_data_merge, family="poisson")
summary(totRich.glm)
anova(totRich.glm, test="Chisq")
plot(totRich.glm) # residuals a bit wonky with lm but the conclusions are qualitatively the same as the poisson. Also the R-squared version of glm (1 - residDev/NullDev) is virtually equivalent to the lm
summary(lm(connect_wt ~ Geno.ID, pp_net_data_merge))
# weighted connectance model
connect_wt.lm <- lm(connect_wt_NAzero ~ Geno.ID, pp_net_data_merge, weights=g.total) # results weighted by the number of galls collected (not gall density!) on each tree.
summary(connect_wt.lm) # Genotype explains 40.5% of the variance
plot(connect_wt.lm) # scale-location residual plots looks MUCH better when weighted
scatterplotMatrix(na.omit(pp_net_data_merge[ ,c("V","G","LD_q","connect_wt","preyRich","predRich","totRich","pred.preyRich")]))
# Gall community composition model
library(vegan)
zeros <- which(rowSums(pp_net_data_merge[ ,c("aSG","rG","rsLG","SG","twG","vLG")]) == 0)
gall.comm <- pp_net_data_merge[-zeros ,c("aSG","rG","rsLG","SG","twG","vLG")]
head(pp_net_data_merge)
ptoid.comm <- pp_net_data_merge[ ,c("Eury.tot","Tory.tot","Meso.tot","Eulo.tot","Lathro.tot","Lestodip","Platy","Mymarid")]
colSums(ptoid.comm)
rowSums(ptoid.comm)
which(rowSums(ptoid.comm) == 0)
zeros.ptoid <- which(rowSums(ptoid.comm))
zeros.ptoid <- which(rowSums(ptoid.comm)==0)
adonis(ptoid.comm ~ Geno.ID, method = "horn", data = pp_net_data_merge[-zeros.ptoid,])
adonis(ptoid.comm[-zeros.ptoid, ] ~ Geno.ID, method = "horn", data = pp_net_data_merge[-zeros.ptoid,])
rda.ptoid.comm <- rda(decostand(ptoid.comm, method = "norm") ~ Geno.ID, data = pp_net_data_merge[-zeros.ptoid, ])
zeros.ptoid <- which(rowSums(pp_net_data_merge[ ,c("Eury.tot","Tory.tot","Meso.tot","Eulo.tot","Lathro.tot","Lestodip","Platy","Mymarid")])==0)
ptoid.comm <- pp_net_data_merge[-zeros.ptoid ,c("Eury.tot","Tory.tot","Meso.tot","Eulo.tot","Lathro.tot","Lestodip","Platy","Mymarid")]
adonis(ptoid.comm~ Geno.ID, method = "horn", data = pp_net_data_merge[-zeros.ptoid,])
rda.ptoid.comm <- rda(decostand(ptoid.comm, method = "norm") ~ Geno.ID, data = pp_net_data_merge[-zeros.ptoid, ])
RsquareAdj(rda.ptoid.comm)
anova(rda.ptoid.comm, by="axis")
plot(rda.ptoid.comm, display=c("cn","sp"))
rda.ptoid.comm <- rda(ptoid.comm ~ Geno.ID, data = pp_net_data_merge)
rda.ptoid.comm <- rda(pp_net_data_merge[ ,c("Eury.tot","Tory.tot","Meso.tot","Eulo.tot","Lathro.tot","Lestodip","Platy","Mymarid")] ~ Geno.ID, data = pp_net_data_merge)
RsquareAdj(rda.ptoid.comm)
plot(rda.ptoid.comm, display=c("cn","sp"))
rda.ptoid.comm <- rda(ptoid.comm ~ Geno.ID, data = pp_net_data_merge[-zeros.ptoid,])
RsquareAdj(rda.ptoid.comm)
anova(rda.ptoid.comm, by="axis")
plot(rda.ptoid.comm, display=c("cn","sp"), choices=c(1,2))
rda.ptoid.comm <- rda(decostand(ptoid.comm, method="norm") ~ Geno.ID, data = pp_net_data_merge[-zeros.ptoid,])
RsquareAdj(rda.ptoid.comm)
anova(rda.ptoid.comm, by="axis")
plot(rda.ptoid.comm, display=c("cn","sp"), choices=c(1,2))
length(pp_net_data_merge$Geno.ID[-zeros.ptoid])
table(pp_net_data_merge$Geno.ID[-zeros.ptoid])
