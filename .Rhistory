bib[grep(\')]
Pandoc.brew(file = "~/Documents/galls-parasitoids/review.html", output=tempfile(), convert="pdf")
Pandoc.brew(file = "~/Documents/galls-parasitoids/review.Rmd", output=tempfile(), convert="pdf")
knitr()
knitcitations()
bib
bib["FernandesEtAl1999"]
pattern(\', bib)
grep(\', bib)
grep(pattern = \', bib)
grep(pattern = \', bib[])
grep(Price,bib)
grep("Price",bib)
grep("\'",bib)
bib[4]
bib[9]
bib[11]
bib
bib <- read.bibtex("~/Documents/BibTex/gall-parasitoids.bib")
bib
bib <- read.bibtex("~/Documents/BibTex/gall-parasitoids.bib")
bib
grep("\'", bib)
bib[5]
bib <- read.bibtex("~/Documents/BibTex/gall-parasitoids.bib")
bib
grep("\'", bib)
bib <- read.bibtex("~/Documents/BibTex/gall-parasitoids.bib")
grep("\'", bib)
bib <- read.bibtex("~/Documents/BibTex/gall-parasitoids.bib")
grep("\'", bib)
bib[1]
bib <- read.bibtex("~/Documents/BibTex/gall-parasitoids.bib")
grep("\'", bib)
bib <- read.bibtex("~/Documents/BibTex/gall-parasitoids.bib")
bib
grep("\'", bib)
latexToUtf8 <- function(x)
{
i <- 0L
whitespace <- c(' ', '\t', '\n')
while (i < length(x)) {
i <- i + 1L
a <- x[[i]]
tag <- attr(a, "latex_tag")
if (tag == "MACRO") {
numargs <- latexArgCount[a]
if (!is.na(numargs)) { # Do we know this macro?
args <- vector("list", numargs)
j <- i
getNext <- TRUE
k <- 1L
while (k <= numargs) {
if (getNext) {
j <- j + 1L
if (j > length(x)) {
warning("argument for ", c(a), " not found", domain = NA)
nextobj <- latex_tag("", "TEXT")
nexttag <- "TEXT"
nextchars <- ""
} else {
nextobj <- x[[j]]
nexttag <- attr(nextobj, "latex_tag")
if (nexttag == "TEXT")
nextchars <- strsplit(nextobj, "")[[1L]]
}
getNext <- FALSE
}
switch(nexttag,
TEXT = {
args[[k]] <- latex_tag(nextchars[1L], "TEXT")
nextchars <- nextchars[-1L]
if (!length(nextchars)) getNext <- TRUE
if (args[[k]] %in% whitespace) next
k <- k+1L
},
COMMENT = getNext <- TRUE, # strip comments
BLOCK =,
ENVIRONMENT =,
MATH = {
args[[k]] <- latexToUtf8(nextobj)
k <- k+1L
getNext <- TRUE
},
NULL = stop("Internal error:  NULL tag", domain = NA))
}
index <- a
for (i1 in seq_along(args)) {
if (is.null(latexTable[[index]])) break
nextobj1 <- args[[i1]]
nexttag1 <- attr(nextobj1, "latex_tag")
index <- c(index, switch(nexttag1,
MACRO =,
TEXT = nextobj1,
BLOCK = deparseLatex(nextobj1, dropBraces=TRUE)))
}
subst <- latex_tag(latexTable[[index]], "TEXT")
if (!is.null(subst) && !is.list(subst)) { # We've made a substitution, which will always
# be a new latex object, possibly containing UTF8
x[[i]] <- subst
if (numargs) {
if (nexttag == "TEXT" && length(nextchars)) {
# We've partially used up the next one, so rebuild it
nextobj[1L] <- paste(nextchars, collapse="")
x[[j]] <- nextobj
j <- j-1L
}
while (j > i) {
# Remove the used up args
x[[j]] <- NULL
j <- j-1L
}
}
} else
i <- j
}
} else if (tag == "BLOCK")
x[[i]] <- latexToUtf8(a)
}
x
}
latexToUtf8(bib)
length(bib)
bib
parseLatex(bib)
install.packages("parser")
library("parser", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
Pandoc.brew(file="~/Documents/galls-parasitoids/review.html", output=tempfile(), convert="pdf")
knit(input="~/Documents/galls-parasitoids/review.html")
Pandoc.brew(file="~/Documents/galls-parasitoids/review.md", output=tempfile(), convert="pdf")
install.packages("markdown")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
Pandoc.brew(file="~/Documents/galls-parasitoids/review.html", output=tempfile(), convert="pdf", graph.hi.res=TRUE)
Pandoc.brew(file="~/Documents/galls-parasitoids/review.html", output=tempfile(), convert="pdf", graph.hi.res=TRUE)
Pandoc.brew(system.file('examples/graphs.brew', package='pander'), output = tempfile(), convert = 'html')
Pandoc.brew(file="~/Documents/galls-parasitoids/review.RMD", output=tempfile(), convert="html", graph.hi.res=TRUE)
Pandoc.brew(file="~/Documents/galls-parasitoids/review.RMD", output="~/Documents/galls-parasitoids/reviewtest", convert="html", graph.hi.res=TRUE)
Pandoc.brew(file="~/Documents/galls-parasitoids/review.RMD", output=tempfile(), convert="html", graph.hi.res=TRUE)
Pandoc.brew(file="~/Documents/galls-parasitoids/review.test.txt", output=tempfile(), convert="pdf", graph.hi.res=TRUE)
Pandoc.brew(file="~/Documents/galls-parasitoids/review.test", output=tempfile(), convert="pdf", graph.hi.res=TRUE)
Pandoc.brew(file="~/Documents/galls-parasitoids/review.test", output=tempfile(), convert="pdf", graph.hi.res=TRUE)
install.packages("digest")
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
Pandoc.brew(system.file('~/Documents/galls-parasitoids/review.Rmd', package='pander'), output=tempfile(), convert="pdf")
library("pander", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
Pandoc.brew(system.file('~/Documents/galls-parasitoids/review.Rmd', package='pander'), output=tempfile(), convert="pdf")
Pandoc.brew(system.file('~/Documents/galls-parasitoids/review.Rmd', package='pander'), output=tempfile(), convert='pdf')
options(rstudio.markdownToHTML =
function(review.Rmd, outputFile) {
system(paste("pandoc", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
install.packages("pander")
options(rstudio.markdownToHTML =
function(inputFile, outputFile) {
system(paste("pandoc", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options
options(rstudio.markdownToHTML =
function(inputFile, outputFile) {
require(markdown)
markdownToHTML(inputFile, outputFile)
}
)
install.packages("sweave")
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
par(mfrow=c(2,1), mar=c(0,4,3,2)+0.1)
curve(splinefxn, 2,8, ylim=c(0,12), xlim=c(0,10), ylab="Gall Size", xlab="",lwd=3, las=1, xaxt="n")
abline(h=6, col=2, lty=2)
abline(h=8, col=2, lty=2)
as.data.frame(gallSpline) # use this to see where lines intersect on graph
abline(v=5, col=3, lty=3)
abline(v=5.65, col=3, lty=3)
# difference between vertical ablines suggest that this gall is only susceptible to this parasitoid species for 4.55 days or ~1/3 of a week.
## parasitoid density figure
par(mar=c(4,4,0,2)+0.1)
u <- 4 # mean weak of emergence
sd <- 1 # standard deviation
curve(1/(sqrt(2*3.14)*sd)*exp(-(x-u)^2/(2*sd^2)), from = 1, to = 8, ylab="Density", xlab="Time", ylim=c(0,0.6), xlim=c(0,10))
abline(v=4, col=1, lty=2)
abline(v=5, col=3, lty=3)
abline(v=5.65, col=3, lty=3)
# note that by looking at probability of a certain spline function surviving at different starts times, may give a good indication whether growth rate or emergence time is unders selection.
curve(splinefxn, 2,8, ylim=c(0,12), xlim=c(0,10), ylab="Gall Size", xlab="",lwd=3, las=1, xaxt="n")
time <- 2:8 # start 2 weeks after "beginning of season" with about a 6 week growth period
gallsize <- c(0,1,3,6,9,10,10)
gallSpline <- spline(time,gallsize)
splinefxn <- splinefun(time,gallsize) # need to see how I can get the actual function from this, mig
par(mfrow=c(2,1), mar=c(0,4,3,2)+0.1)
curve(splinefxn, 2,8, ylim=c(0,12), xlim=c(0,10), ylab="Gall Size", xlab="",lwd=3, las=1, xaxt="n")
abline(h=6, col=2, lty=2)
abline(h=8, col=2, lty=2)
as.data.frame(gallSpline) # use this to see where lines intersect on graph
abline(v=5, col=3, lty=3)
abline(v=5.65, col=3, lty=3)
# difference between vertical ablines suggest that this gall is only susceptible to this parasitoid species for 4.55 days or ~1/3 of a week.
## parasitoid density figure
par(mar=c(4,4,0,2)+0.1)
u <- 4 # mean weak of emergence
sd <- 1 # standard deviation
curve(1/(sqrt(2*3.14)*sd)*exp(-(x-u)^2/(2*sd^2)), from = 1, to = 8, ylab="Density", xlab="Time", ylim=c(0,0.6), xlim=c(0,10))
abline(v=4, col=1, lty=2)
abline(v=5, col=3, lty=3)
abline(v=5.65, col=3, lty=3)
par(mfrow=c(1,2))
web1 <- matrix(c(1,9,5,9,1,5), nrow=2, byrow=T)
web2 <- matrix(c(9,1,5,1,9,5), nrow=2, byrow=T)
rownames(web1) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web1) <- c("Parasitoid sp. 1", "Parasitoid sp. 2", "Galls surviving")
rownames(web2) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web2) <- c("Parasitoid sp. 1", "Parasitoid sp. 2", "Galls surviving")
community <- matrix(c(15,15,10,10,15,15,10,10), nrow=2, byrow=T)
colnames(community) <- c("Gall sp. 1", "Gall sp. 2", "Parasitoid sp. 1", "Parasitoid sp. 2")
rownames(community) <- c("Site 1", "Site 2")
site1 <- c("a) Site 1")
site2 <- c("b) Site 2")
visweb(web1, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site1)
visweb(web2, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site2)
print(community)
library(bipartite)
par(mfrow=c(1,2))
web1 <- matrix(c(1,9,5,9,1,5), nrow=2, byrow=T)
web2 <- matrix(c(9,1,5,1,9,5), nrow=2, byrow=T)
rownames(web1) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web1) <- c("Parasitoid sp. 1", "Parasitoid sp. 2", "Galls surviving")
rownames(web2) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web2) <- c("Parasitoid sp. 1", "Parasitoid sp. 2", "Galls surviving")
community <- matrix(c(15,15,10,10,15,15,10,10), nrow=2, byrow=T)
colnames(community) <- c("Gall sp. 1", "Gall sp. 2", "Parasitoid sp. 1", "Parasitoid sp. 2")
rownames(community) <- c("Site 1", "Site 2")
site1 <- c("a) Site 1")
site2 <- c("b) Site 2")
visweb(web1, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site1)
visweb(web2, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site2)
print(community)
visweb(web1, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site1)
visweb(web2, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site2)
print(community)
plot(community)
plot(community)
plot(print(community))
Titanic
plot(Titanic)
plotweb(web1)
plotweb(web2)
plotweb(web1)
text(0.5,2.5,labels=site1)
plotweb(web1)
text(0.5,2.5,labels=site1)
text(0.5,5,labels=site1)
plotweb(web1, main="Site 1")
plotweb(web1)
plotweb(web2)
plotweb(web1, add=T)
plotweb(web1)
plotweb(web1)
plotweb(web2)
par(mfrow=c(2,1))
web1 <- matrix(c(1,9,5,9,1,5), nrow=2, byrow=T)
web2 <- matrix(c(9,1,5,1,9,5), nrow=2, byrow=T)
rownames(web1) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web1) <- c("Parasitoid sp. 1", "Parasitoid sp. 2", "Galls surviving")
rownames(web2) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web2) <- c("Parasitoid sp. 1", "Parasitoid sp. 2", "Galls surviving")
community <- matrix(c(15,15,10,10,15,15,10,10), nrow=2, byrow=T)
colnames(community) <- c("Gall sp. 1", "Gall sp. 2", "Parasitoid sp. 1", "Parasitoid sp. 2")
rownames(community) <- c("Site 1", "Site 2")
site1 <- c("a) Site 1")
site2 <- c("b) Site 2")
visweb(web1, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site1)
visweb(web2, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site2)
print(community)
plotweb(web1)
plotweb(web1)
plotweb(web2)
par(mfrow=c(2,1))
web1 <- matrix(c(1,9,5,9,1,5), nrow=2, byrow=T)
web2 <- matrix(c(9,1,5,1,9,5), nrow=2, byrow=T)
rownames(web1) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web1) <- c("Ptoid sp. 1", "Ptoid sp. 2", "Galls surviving")
rownames(web2) <- c("Gall sp. 1", "Gall sp. 2")
colnames(web2) <- c("Ptoid sp. 1", "Ptoid sp. 2", "Galls surviving")
community <- matrix(c(15,15,10,10,15,15,10,10), nrow=2, byrow=T)
colnames(community) <- c("Gall sp. 1", "Gall sp. 2", "Ptoid sp. 1", "Ptoid sp. 2")
rownames(community) <- c("Site 1", "Site 2")
site1 <- c("a) Site 1")
site2 <- c("b) Site 2")
visweb(web1, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site1)
visweb(web2, type="none", text="interaction", plotsize=1)
text(0.5,2.5,labels=site2)
print(community)
plotweb(web1)
plotweb(web1)
plotweb(web2)
Species <- c(45, 329, 489)
Types <- c("Predators", "Herbivores", "Parasitoids")
plot(Species ~ Types)
SpeciesTypes <- cbind.data.frame(Species,Types)
plot(SpeciesTypes)
BritishInsectDiversity <- read.csv("~/Desktop/Parasitoid_Lecture/BritishInsectDiversity.csv")
viewData(BritishInsectDiversity)
plot(BritishInsectDiversity)
plot(Predators)
plot(BritishInsectDiversity$Predators)
with(BritishInsectDiversity, plot(Predators + Herbivores + Parasitoids))
c1 <- rep("Predators",45)
c1
c2 <- rep("Herbivores",329)
c3 <- rep("Parasitoids",489)
data <- rbind(c1,c2,c3)
data <- c(c1,c2,c3)
data
plot(data)
plot.factor(data)
data <- as.factor(data)
plot(data)
plot(data, main = "Species Diversity of British Insects")
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500))
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), type="S")
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cexlab=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex.lab=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex.lab=3, cex.axis=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex.lab=3, cex.axis=3, cex.main=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex.lab=3, cex.axis=3, cex.main=3, cex.sub=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex.axis=3, cex.main=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex.lab = 3, cex.axis=3, cex.main=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex=3, cex.axis=3, cex.main=3)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500), cex=2, cex.axis=2, cex.main=2)
plot(data, main = "Species Diversity of British Insects", ylim=c(0,500))
require(knitr)
require(markdown)
knit('test.rmd', 'test.md')
ssCR
source('~/Dropbox/FoodWebs/Models.R')
ssCR
r <- 0.6
K <- 10.0
e <- 0.8
m <- 0.5
Ro <- 1.0
Tau <- 2.7
R <- 0.6
Time <- 25
p.ssCR <- c(r = r, K = K, e = e, m = m, Ro = Ro, Tau = Tau)
ssCR.1 <- ode(R, 1:Time, ssCR, p.ssCR)
library(deSolve)
ssCR.1 <- ode(R, 1:Time, ssCR, p.ssCR)
r <- 0.6
K <- 10.0
e <- 0.8
m <- 0.5
Ro <- 1.0
Tau <- 2.7
a <- 1.0 # not mentioned in McCann's book
R <- 0.6
Time <- 25
p.ssCR <- c(r = r, K = K, e = e, m = m, Ro = Ro, Tau = Tau)
ssCR.1 <- ode(R, 1:Time, ssCR, p.ssCR)
ssCR.1
library('bipartite')
data(Safariland)
plotweb(Safariland)
visweb(Safariland)
visweb(Safariland, type = "diagonal")
nested(Safariland, method = "NODF")
nested(Safariland, method = "NODF2")
visweb(Safariland, type = "nested")
obs <- unlist(networklevel(Safariland, index="weighted nestedness"))
nulls <- nullmodel(Safariland, N=100, method=1)
null <- unlist(sapply(nulls, networklevel, index="weighted nestedness")) #takes a while ...
plot(density(null), xlim=c(min(obs, min(null)), max(obs, max(null))),
main="comparison of observed with null model Patefield")
abline(v=obs, col="red", lwd=2)
networklevel(Safariland, index="weighted nestedness")
networklevel(Safariland, index="NODF2")
networklevel(Safariland, index="NODF")
networklevel(Safariland, index="nestedness")
data(memott1999)
data(memmott1999)
nested(memmott1999, index="NODF2")
nested(memmott1999, type="NODF2")
nested(memmott1999, method="NODF2")
nested(memmott1999, method="weighted nestedness")
nested(memmott1999, method=6)
nested(memmott1999, method="weighted NODF")
nested(memmott1999, method="NODF")
nested(memmott1999, method="NODF2")
data(mosquin1967)
visweb(mosquin1967)
nested(mosquin1967, method="weighted NODF")
nested(mosquin1967, method="NODF2")
null.mosquin <- nullmodel(mosquin1967, N=100, method = "r2d")
plot(null.mosquin)
null.mosquin
## Not run:
data(Safariland)
nullmodel(Safariland, N=2, method=1)
nullmodel(Safariland>0, N=2, method=4)
# analysis example:
obs <- unlist(networklevel(Safariland, index="weighted nestedness"))
nulls <- nullmodel(Safariland, N=100, method=1)
null <- unlist(sapply(nulls, networklevel, index="weighted nestedness")) #takes a while ...
plot(density(null), xlim=c(min(obs, min(null)), max(obs, max(null))),
main="comparison of observed with null model Patefield")
abline(v=obs, col="red", lwd=2)
praw <- sum(null>obs) / length(null)
ifelse(praw > 0.5, 1-praw, praw)
praw
## Not run:
data(Safariland)
nullmodel(mosquin1967, N=2, method=1)
nullmodel(mosquin1967>0, N=2, method=4)
# analysis example:
obs <- unlist(networklevel(mosquin1967, index="weighted nestedness"))
nulls <- nullmodel(mosquin1967, N=100, method=1)
null <- unlist(sapply(nulls, networklevel, index="weighted nestedness")) #takes a while ...
plot(density(null), xlim=c(min(obs, min(null)), max(obs, max(null))),
main="comparison of observed with null model Patefield")
abline(v=obs, col="red", lwd=2)
praw <- sum(null>obs) / length(null)
ifelse(praw > 0.5, 1-praw, praw)
praw
## Not run:
data(Safariland)
nullmodel(mosquin1967, N=2, method=1)
nullmodel(mosquin1967>0, N=2, method=4)
# analysis example:
obs <- unlist(networklevel(mosquin1967, index="NODF"))
nulls <- nullmodel(mosquin1967, N=100, method=1)
null <- unlist(sapply(nulls, networklevel, index="NODF")) #takes a while ...
plot(density(null), xlim=c(min(obs, min(null)), max(obs, max(null))),
main="comparison of observed with null model Patefield")
abline(v=obs, col="red", lwd=2)
praw <- sum(null>obs) / length(null)
ifelse(praw > 0.5, 1-praw, praw)
plotweb(mosquin1967)
plotweb(mosquin1967)
compart(mosquin1967)
visweb(mosquin1967, type="diagonal")
library("cheddar", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
Degree(SkipwithPond)
data(SkipwithPond)
Degree(SkipwithPond)
plot(SkipwithPond)
library('bipartite')
data(small1976)
str(small1976)
small1976
plotweb(small1976)
visweb(small1976)
visweb(small1976, type="diagonal")
module <- computeModules(small1976)
plotModuleWeb(module)
nested(small1976, method="NODF2")
nested(small1976, method="weidghted NODF")
nested(small1976, method= 6)
nested(small1976, method= "weighted NODF")
nestedness(small1976, null.models=T, n.nulls=100)
networklevel(small1976, index="ALL")
library(cheddar)
data(SkipwithPond)
SkipwithPond
str(SkipwithPond)
plot(SkipwithPond)
library(knitr)
library(knitcitations)
library(vegan)
library("mvabund", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
data(spider)
spiddat <- mvabund(spider$abund)
X <- spider$x
best.r.sq( spiddat~X)
head(spiddat)
library(knitr)
library(knitcitations)
bibliography
bibliography()
bibliography(proposal_bib)
proposal_bib <- read.bibtex("~/Documents/BibTex/PhD Proposal.bib")
bibliography(proposal_bib)
bibliography()
citep(proposal_bib)
proposal_bib[1]
proposal_bib[2]
library(knitr)
library(knitcitations)
proposal_bib[[1]]
proposal_bib <- read.bibtex("~/Documents/BibTex/PhD Proposal.bib")
proposal_bib[1]
proposal_bib
setwd("~/Documents/Genotype_Networks")
source('modularity.R')
library(bipartite)
willow_gall_ptoid_network_original <- read.csv("~/Documents/Genotype_Networks/Gall_Interaction_network_metaweb_March27_2013.csv")
willow_gall_ptoid_network <- as.matrix(willow_gall_ptoid_network_original[1:4, 2:8])
row_names_willow_gall_ptoid_network <- list(c("Iteomyia salicisverruca", "Rabdophaga salicisbrassicoides", "Pontania californica", "twG"))
dimnames(willow_gall_ptoid_network)[1] <- row_names_willow_gall_ptoid_network
modularity_bipartite(willow_gall_ptoid_network)
rel_modularity_bipartite(willow_gall_ptoid_network) # modularity is marginally significant with this early dataset.  I bet this will change once I find more parasitoid species.
visweb(willow_gall_ptoid_network, type="diagonal", frame=F, labsize=0.5)
