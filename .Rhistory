geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.5), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.gall_ptoid)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,3), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.gall_ptoid)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.8), breaks = seq(1,2.75, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.gall_ptoid)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.9), breaks = seq(1,2.75, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.gall_ptoid)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.85), breaks = seq(1,2.75, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.plant_gall)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.5), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.plant_gall)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,5), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.plant_gall)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.5), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
web.measures.summary <- all.measures %>%
group_by(Number.of.Genotypes) %>%
summarise(mean.complexity = mean(total_complexity))
with(web.measures.summary, max(mean.complexity)/min(mean.complexity))
str(all.measures)
web.measures.summary
web.measures.summary <- all.measures %>%
group_by(Number.of.Genotypes) %>%
summarise(mean.complexity = mean(total_complexity, na.rm = TRUE))
web.measures.summary
with(web.measures.summary, max(mean.complexity)/min(mean.complexity))
web.sum.lm <- lm(log(mean.complexity) ~ log(Number.of.Genotypes.x), data = web.measures.summary)
web.sum.lm <- lm(log(mean.complexity) ~ log(Number.of.Genotypes), data = web.measures.summary)
summary(web.sum.lm) # Need to understand interpretation here.
visreg(web.sum.lm) # not quite there
web.lm <- lm(total_complexity ~ Number.of.Genotypes, data = all.measures)
summary(web.lm)
visreg(web.lm)
web.lm <- lm(log(total_complexity) ~ log(Number.of.Genotypes), data = all.measures)
summary(web.lm)
visreg(web.lm)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.5), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.3), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
## tidy up full link composition data
full.links.df <- as.data.frame(tree_level_interaxn_all_plants_traits_size) %>%
select(Genotype,
vLG_abund, aSG_abund, rG_abund, SG_abund, # willow-gall links
vLG_Platy, vLG_Tory, vLG_Mesopol, vLG_Eulo, vLG_Mymarid, # vLG-ptoid links
rG_Platy, rG_Tory, rG_Mesopol, rG_Eulo, rG_Lestodip, # rG-ptoid links
SG_Platy, aSG_Tory) # other gall-ptoid links
all.links <- names(full.links.df)[-1]
trees.with.links <- which(rowSums(full.links.df[ ,all.links]) > 0)
table(full.links.df$Genotype[trees.with.links]) # J, N, and U have 2 or less replicates with any links.
full.links.df.sub <- filter(full.links.df[trees.with.links, ],
Genotype != "J",
Genotype != "N",
Genotype != "U")
## perform RDA analyses and extract centroid scores for plotting.
library(vegan)
cap.geno <- capscale(full.links.df.sub[ ,all.links] ~ Genotype,
data = full.links.df.sub,
distance = "bray")
summary(cap.geno)
centroids.cap.geno <- scores(cap.geno, choices = c(1,2), display = "cn")
rownames(centroids.cap.geno) <- levels(full.links.df$Genotype)[-c(10,14,21)] # remove Genotypes J, N, and U
## generate plot. Coded out the manner in which I saved the plot
# pdf(file="full.link.composition.pdf",width=8, height=8)
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "forestgreen", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
# dev.off() # turn off pdf device.
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "gray80", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
## generate plot. Coded out the manner in which I saved the plot
# pdf(file="full.link.composition.pdf",width=8, height=8)
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "gray90", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
## generate plot. Coded out the manner in which I saved the plot
# pdf(file="full.link.composition.pdf",width=8, height=8)
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "gray50", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
levels(tree_level_interaxn_all_plants_traits_size$Genotype)[1] <- "C"
#### Ordination of link composition of the entire food web.
## tidy up full link composition data
full.links.df <- as.data.frame(tree_level_interaxn_all_plants_traits_size) %>%
select(Genotype,
vLG_abund, aSG_abund, rG_abund, SG_abund, # willow-gall links
vLG_Platy, vLG_Tory, vLG_Mesopol, vLG_Eulo, vLG_Mymarid, # vLG-ptoid links
rG_Platy, rG_Tory, rG_Mesopol, rG_Eulo, rG_Lestodip, # rG-ptoid links
SG_Platy, aSG_Tory) # other gall-ptoid links
all.links <- names(full.links.df)[-1]
trees.with.links <- which(rowSums(full.links.df[ ,all.links]) > 0)
table(full.links.df$Genotype[trees.with.links]) # J, N, and U have 2 or less replicates with any links.
full.links.df.sub <- filter(full.links.df[trees.with.links, ],
Genotype != "J",
Genotype != "N",
Genotype != "U")
## perform RDA analyses and extract centroid scores for plotting.
library(vegan)
cap.geno <- capscale(full.links.df.sub[ ,all.links] ~ Genotype,
data = full.links.df.sub,
distance = "bray")
summary(cap.geno)
centroids.cap.geno <- scores(cap.geno, choices = c(1,2), display = "cn")
rownames(centroids.cap.geno) <- levels(full.links.df$Genotype)[-c(10,14,21)] # remove Genotypes J, N, and U
## generate plot. Coded out the manner in which I saved the plot
# pdf(file="full.link.composition.pdf",width=8, height=8)
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "gray50", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
# dev.off() #
require(png)
install.packages("png")
require(png)
## generate plot. Coded out the manner in which I saved the plot
png(file="~/Documents/Genotype_Networks/figures/full.link.composition.png",width=8, height=8, units = "in")
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "gray50", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
dev.off() # turn off pdf device.
png(file="~/Documents/Genotype_Networks/figures/full.link.composition.png",width=8, height=8, units = "in", res = 300)
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "gray50", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
dev.off() # turn off pdf device.
ordination <- readPNG("~/Documents/Genotype_Networks/figures/full.link.composition.png", interpolate = TRUE)
ordination <- readPNG("~/Documents/Genotype_Networks/figures/full.link.composition.png")
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank()) +
annotation_custom(ordination, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
require(grid)
ord.rast <- rasterGrob(ord.png, interpolate = TRUE)
ord.png <- readPNG("~/Documents/Genotype_Networks/figures/full.link.composition.png")
ord.rast <- rasterGrob(ord.png, interpolate = TRUE)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank()) +
annotation_custom(ord.rast, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank()) +
annotation_custom(ord.rast, xmin = 19, xmax = 25, ymin = 1, ymax = 1.5)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank()) +
annotation_custom(ord.rast, xmin = 16, xmax = 26, ymin = 1, ymax = 2)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
## load required libraries
require(visreg)
require(ggplot2)
require(grid)
#require(png)
## upload results from simulation
all.measures <- read.csv("~/Documents/Genotype_Networks/data/food web complexity simulation.csv")
dim(all.measures)[1] # 2221 unique simulations. 2425 simulations originally run
## upload png of food web composition ordination
#ord.png <- readPNG("~/Documents/Genotype_Networks/figures/full.link.composition.png")
#ord.rast <- rasterGrob(ord.png, interpolate = TRUE)
## plot the relationship between genetic variation and total food web complexity (weighted linkage density)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank()) #+
#annotation_custom(ord.rast, xmin = 16, xmax = 26, ymin = 1, ymax = 2)
## plot the relationship between genetic variation and willow-gall complexity (weighted linkage density)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.plant_gall)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.5), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
## plot the relationship between genetic variation and gall-ptoid complexity (weighted linkage density)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = link.density.gall_ptoid)) +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.85), breaks = seq(1,2.75, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank())
all.measures
head(all.measures)
filter(all.measures, Number.of.Genotypes == 1)
str(all.measures)
filter(all.measures, Number.of.Genotypes == 1)
require(dplyr)
filter(all.measures, Number.of.Genotypes == 1)
max(filter(all.measures, Number.of.Genotypes == 1)$total_complexity)
max(filter(all.measures, Number.of.Genotypes == 1)$total_complexity, na.rm = TRUE)
single.complexity.max <- max(filter(all.measures, Number.of.Genotypes == 1)$total_complexity, na.rm = TRUE)
ggplot(all.measures,
aes(x = Number.of.Genotypes, y = total_complexity)) +
geom_hline(yintercept = single.complexity.max, linetype = "dashed") +
geom_jitter(shape = 1, color = "grey", position = position_jitter(width = 0.15, height = NULL)) +
stat_summary(fun.y = mean, geom = "point", color = "steelblue", size = 8) +
xlab("Genetic variation (no. of genotypes)") + ylab("Food web complexity index") +
scale_x_continuous(limits = c(0,25), breaks = 1:25) +
scale_y_continuous(limits = c(1,2.4), breaks = seq(1,2.5, by = 0.25)) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16, vjust = 0.1),
axis.title.y = element_text(size = 16, vjust = 1),
panel.grid = element_blank()) #+
#annotation_custom(ord.rast, xmin = 16, xmax = 26, ymin = 1, ymax = 2)
source('~/Documents/Genotype_Networks/Rscripts/network_management_tree_level.R')
source('~/Documents/miscellaneous_R/ggplot_themes.R')
source('~/Documents/ggnet/bipartite_plot_info.R')
#### Ordination of link composition of the entire food web.
## tidy up full link composition data
full.links.df <- as.data.frame(tree_level_interaxn_all_plants_traits_size) %>%
select(Genotype,
vLG_abund, aSG_abund, rG_abund, SG_abund, # willow-gall links
vLG_Platy, vLG_Tory, vLG_Mesopol, vLG_Eulo, vLG_Mymarid, # vLG-ptoid links
rG_Platy, rG_Tory, rG_Mesopol, rG_Eulo, rG_Lestodip, # rG-ptoid links
SG_Platy, aSG_Tory) # other gall-ptoid links
all.links <- names(full.links.df)[-1]
trees.with.links <- which(rowSums(full.links.df[ ,all.links]) > 0)
table(full.links.df$Genotype[trees.with.links]) # J, N, and U have 2 or less replicates with any links.
full.links.df.sub <- filter(full.links.df[trees.with.links, ],
Genotype != "J",
Genotype != "N",
Genotype != "U")
## perform RDA analyses and extract centroid scores for plotting.
library(vegan)
cap.geno <- capscale(full.links.df.sub[ ,all.links] ~ Genotype,
data = full.links.df.sub,
distance = "bray")
summary(cap.geno)
centroids.cap.geno <- scores(cap.geno, choices = c(1,2), display = "cn")
rownames(centroids.cap.geno) <- levels(full.links.df$Genotype)[-c(10,14,21)] # remove Genotypes J, N, and U
## generate plot. Coded out the manner in which I saved the plot
#png(file="~/Documents/Genotype_Networks/figures/full.link.composition.png",width=8, height=8, units = "in", res = 300)
plot.new()
plot.window( xlim=c(-1.75,1.5), ylim = c(-1.5,2.5), asp = 1)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
axis(side=1, tck = -0.015, padj=-0.5)
axis(side=2, tck= -0.015, las=1)
title(xlab="CAP 1", ylab="CAP 2")
box()
# fill in the plot
ordiellipse(cap.geno, groups = full.links.df.sub$Genotype,
kind = "se", draw = "polygon",
col= "gray50", #"gainsboro",
border = NA)
#ordiellipse(cap.geno, groups = full.links.df.sub$Genotype, kind = "se", show.groups="X", col = "grey", draw = "polygon") # code for highlighting specific groups
text(x = centroids.cap.geno[ ,1], centroids.cap.geno[ ,2], labels = row.names(centroids.cap.geno))
#dev.off
levels(tree_level_interaxn_all_plants_traits_size$Genotype)[1] <- "C"
source('~/Documents/Genotype_Networks/Rscripts/network_management_tree_level.R')
source('~/Documents/Genotype_Networks/Rscripts/network_management_tree_level.R')
