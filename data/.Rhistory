pp.info <- data.frame(pp = paste("pp",plant.position.info$Plant.Position,sep=""),Geno.ID = plant.position.info$Genotype, Sex = plant.position.info$Gender)
shoot.count.data <- data.frame(pp = paste("pp", shoot.countEst$Plant.Position,sep=""), shootEst.all = shoot.countEst$shootEst.all, shoot.countEst.no18 = shoot.countEst$shootEst.no18, Galls.found = shoot.countEst$Galls.found)
# create list of all dataframes
pp_dfs = list(shoot.count.data, pp_net_data_trans,pp_gall.ptoid.comm, pp.info)
pp_net_data_merge <- join_all(pp_dfs, by="pp", type = "left")
pp_net_data_merge[which(pp_net_data_merge$Galls.found == 0),]
gall_net[which(gall_net$plant.position == 402),]
gall_net <- gall_net[-which(gall_net$plant.position == 402),] # this gall was actually collected from a survey #1, so I removed it from this dataset.
##############################################################################
# Description: This script organizes and manages data collected in the fall of
#              2012 in the willow garden at HBNWR in Eureka, California.
#
# Manager: Matt Barbour
# Email: barbour@zoology.ubc.ca
##############################################################################
##### Data management
### load required libraries
# data manipulation
library(reshape)
library(reshape2)
library(plyr)
#### Load functions
source('~/Documents/miscellaneous_R/community_explore.R')
source('~/Documents/Genotype_Networks/data/fxns_networks.R')
#### set working directory
setwd(dir='~/Documents/Genotype_Networks/data/')
#### Upload required data
# gall network data (survey #2)
Gall_Network_Data_Survey_2_2012 <- read.csv("~/Documents/Genotype_Networks/data/Gall_Network_Data_Survey_2_raw.csv", skip=1, stringsAsFactors = FALSE, strip.white = TRUE)
# plant position data with details on plant identity to eventually merge with gall network data
plant.position.info <- read.csv("~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/Willow Garden Positions.csv")
plant.position.info <- plant.position.info[ ,c("Plant.Position","Genotype","Gender")]
# replaces all NAs in gall contentx matrix with zeros.  These are biologically meaningful zeros and do not represent missing data.
## May need to combine inq.dam category with exit hole
g.contents_matrix <- as.matrix(subset(Gall_Network_Data_Survey_2_2012, select = vLG.pupa:exit.hole))
str(g.contents_matrix)
g.contents_matrix[is.na(g.contents_matrix)] <- 0
# merge the updated gall content matrix back with the original survey data
gall_net <- cbind.data.frame(Gall_Network_Data_Survey_2_2012[ ,c("survey","plant.position","gall.id","g.id.unk","gall.sp","g.sp.unsure","g.height","g.width","g.3meas","point.count", "exit.size")], g.contents_matrix) # excludes "need.to.review" and "notes" from original data
# merge the gall network data and plant position information
gall_net <- merge(gall_net, plant.position.info, by.x="plant.position", by.y="Plant.Position")
gall_net <- transform(gall_net, plant.position.new = paste("pp",plant.position,sep=""))
# examine data for errors. Since I never found any "twG" larva, I'm ommitting this as a possible gall species (although it may related in some way to aSG).
table(gall_net$gall.sp)
gall_net[which(gall_net$g.sp.unsure == 1),]
gall_net[which(gall_net$gall.sp == "VLG"),c("gall.sp")] <- c("vLG","vLG") # double checked with original data
gall_net[which(gall_net$gall.sp == ""),c("gall.sp")] <- "vLG" # notes indicate that the parasitoids were found in the vial, and only vLG were in the vial. However, these parasitoids could not be tied to a particular gall, which is why there were no height measurements.
gall_net[which(gall_net$gall.sp == "aSG/twG"),"gall.sp"] <- "aSG" # may need to double check this.
gall_net[which(gall_net$gall.sp == "twG" & gall_net$plant.position == "257" ), "gall.sp"] <- "aSG" # after looking at the picture, I have confirmed that was an aSG.
gall_net[which(gall_net$gall.sp == "SG/PG"),c("gall.sp")] <- "SG" # checked noted and picture on my phone and confirmed that this was a Stem Gall.
gall_net[which(gall_net$gall.sp == "SG2"),"gall.sp"] <- rep("SG",7) # I belive SG2 is simply a deformed SG so I've decided to lump these together. This conclusion is further supported by the fact that SG and SG2 larva looked identical.
gall_net <- gall_net[-which(gall_net$gall.sp == "PG/bud gall"), ] # removed these from the dataset, because I'm not confident about their identification.
gall_net <- gall_net[-which(gall_net$gall.sp == "twG"),]
gall_net <- gall_net[-which(gall_net$Pont.ad == 1 & gall_net$gall.sp == "rG"),] # removed this datapoint, because it was a sawfly adult found in the vial, and not explicitly linked as emerging from an rG.
gall_net[which(gall_net$gall.sp == "rG" & gall_net$Pont.prep == 1),"unsure"] <- 1 # replaced this with "unsure" (see next line of code)
gall_net[which(gall_net$gall.sp == "rG" & gall_net$Pont.prep == 1),"Pont.prep"] <- 0 # in notes, larva was "unknown", so I'm unsure why it was included at "Pont.prep" here. Likely not a gall associate.
gall_net <- gall_net[-which(gall_net$gall.sp == "rsLG" & gall_net$Tory.mal == 1),] # I'm removing this data point and classifying this as a data error for the following reasons. This parasitoid was found within a vial that only had rsLG, but both of these galls were "Solid rsLG with no larva". Therefore, the parasitoid could not have been from either of these galls. That, and we have no other recordings of a Torymus coming from rsLG, plus no evidence of rsLG being associated with Torymus in the literature (Caltagirone 1964)
gall_net[which(gall_net$gall.sp == "rsLG" & gall_net$Eulo.fem == 1),"gall.sp"] <- "rG" # although paper copy of data suggests this is "rsLG", this parasitoid was put in the "rG" collection bag for Eulophid females. This piece of evidence as well as the fact that this is the only occassion where a Eulophid was associated with rsLG, and no evidence from the literature of Eulophids attacking rsLG (Caltagirone 1964), compels me to switch the gall.sp id to "rG".
gall_net[which(gall_net$gall.sp == "rsLG" & gall_net$Platy == 1),"nothing"] <- 1 # although paper copy of data suggests this was sp. 12 ("Platy"), the note says "no signs of life", plus the sp.12 category was right next to the "nothing" category. Additionally, this gall was a very small "rsLG" which are typically solid galls. Furthermore, this is the only "rsLG-Platy" association in the entire data. This evidence compels me to change this to "nothing = 1" for this data entry. (PERHAPS EVEN SOLID...)
gall_net[which(gall_net$gall.sp == "rsLG" & gall_net$Platy == 1),"Platy"] <- 0 # see note on line 65 of code.
gall_net[which(gall_net$gall.sp == "vLG" & gall_net$Eury.mal == 1),"Tory.mal"] <- 1 # data entry error. Original data specify this is a "Tory.mal"
gall_net[which(gall_net$gall.sp == "vLG" & gall_net$Eury.mal == 1),"Eury.mal"] <- 0 #see note on line 68 of code.
gall_net[which(gall_net$gall.sp == "rG" & gall_net$Mesopol == 1),] # this datapoint seems legit. A new bag was explicitly created for this association.
gall_net <- gall_net[-which(gall_net$plant.position == 73), ] # removing from this data set because it was collected from the ground.
gall_net <- gall_net[-which(gall_net$plant.position == 69),] # removing from this data set because it was collected from the ground
gall_net <- gall_net[-which(gall_net$plant.position == 71 & gall_net$gall.id %in% c(1.1,1.2)),] # removing from this data set because it was collected from the ground
gall_net <- gall_net[-which(gall_net$plant.position == 75 & gall_net$g.height == 6.31),]# removing from this data set because it was collected from the ground
gall_net <- gall_net[-which(gall_net$plant.position == 65 & gall_net$gall.id %in% c("B,1")),] # only found one gall in dataset, although field notes suggested two galls were collected from the ground under plant #65.
gall_net <- gall_net[-which(gall_net$plant.position == 402),] # this gall was actually collected from a survey #1, so I removed it from this dataset.
gall_net[which(gall_net$plant.position == 77),] #77 is a bit of a mystery (field notes suggest no galls, but there is a gall collection (possibly from survey #1???)). Right now, I've decided to keep it in the dataset.
# transform the data to focus on the parasitoid community only and melt it for easy data summaries
gall_net_trans = transform(gall_net, Eury.tot = Eury.mal + Eury.fem, Tory.tot = Tory.mal + Tory.fem, Meso.tot = Mesopol + Ptero.2, Eulo.tot = Eulo.fem + Eulo.mal, Lathro.tot = Lathro.fem + Lathro.mal, Pont.surv = Pont.ad + Pont.prep, rG.surv = rG.wh.larv + rG.or.larv, g.total = rowSums(subset(gall_net, select = vLG.pupa:nothing))) # do I need to include exit.hole in this?
write.csv(gall_net_trans,"complete_network_data.csv")
######## Tree level Network, Community, and Species level analysis
#### upload necessary packages
# data manipulation
library(reshape)
library(reshape2)
library(plyr)
# plotting
library(ggplot2)
library(car) # for scatterplot matrices
# network analysis
library(bipartite)
### source in required functions
source('~/Documents/Genotype_Networks/data/fxns_networks.R')
### Upload necessary data
# upload plant position info
plant.position.info <- read.csv("~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/Willow Garden Positions.csv")
# upload complete network data
complete_network_data <- read.csv("~/Documents/Genotype_Networks/data/complete_network_data.csv")
# Shoot count estimates as well as plant positions where zero galls were collected
shoot.countEst <- read.csv("~/Documents/Genotype_Networks/data/survey_2_stem_diams_shootEsts.csv")
### Create data frame of interest
net_focal <- subset(complete_network_data, select = c("Gender","Genotype","plant.position.new","X","gall.sp","gall.id","point.count","g.height","g.width","g.3meas","vLG.pupa","rG.surv","Pont.surv","SG.larv","aSG.larv","Eury.tot","Tory.tot","Meso.tot","Eulo.tot","Lathro.tot","Mymarid","Lestodip","Platy","g.total"))
gall_net_melt <- melt(net_focal, id.vars = c("Genotype","Gender","plant.position.new","X","gall.sp","gall.id","point.count","g.total","g.height","g.width","g.3meas"), variable_name = "gall_contents") # preserve zeros for network analysis, because they identify herbivores that were present, just not connected to any parasitoids.
### Regional-scale network (all tree samples summed together).
total_net <- dcast(gall_net_melt, gall.sp ~ gall_contents, sum)
rownames(total_net) <- total_net[ ,1]
total_net_ptoids <- subset(total_net, select=Eury.tot:Platy) # remove gall.sp
gall_abunds <- rowSums(total_net[,-1])
names(gall_abunds) <- rownames(total_net)
visweb(total_net_ptoids, type="diagonal") # Compartments sort according to phylogeny
plotweb(total_net_ptoids, low.abun = gall_abunds - rowSums(total_net_ptoids), abuns.type = "additional")
networklevel(total_net_ptoids)
### Genotype level network with gall-parasitoid links. Need to account for number of shoots sampled on each genotype.
geno_link_net <- dcast(gall_net_melt, Genotype ~ gall.sp + gall_contents, sum)
geno_link_net_sub <- geno_link_net[ ,-1]
rownames(geno_link_net_sub) <- geno_link_net$Genotype
geno_link_net_sub <- geno_link_net_sub[ ,-which(colSums(geno_link_net_sub) == 0)]
geno_link_net_sub_noSurv <- geno_link_net_sub[ ,-c(1,3,9,12,14)]
networklevel(geno_link_net_sub_noSurv)
visweb(geno_link_net_sub_noSurv, type="diagonal")
visweb(geno_link_net_sub_noSurv, type="nested")
plotweb(geno_link_net_sub_noSurv)
# create a list with 100 of the same geno.link data frame to calculate and identify the maximum modularity value.
geno_link_samelist <- list()
for(i in 1:100){
geno_link_samelist[[i]] <- geno_link_net_sub_noSurv
}
### Still need to try this code after I account for shoot estimates. It will probably take a very long time, which is why I have coded it out. Identify iteration generating the maximum modularity value "Q". Note that any adjustments here should also occur for the null model below!!!
#vector.Q_geno_link <- sapply(geno_link_samelist, computeModules)
#max.Q_geno_link <- sapply(vector.Q_geno_link, function(x) max(x@likelihood))
# czvalues(geno_link_modul, weighted = TRUE) # defaults to hight trophic level. Note this function remains experimental and still unclear of its relevance to quantitative bipartite networks...
# plotModuleWeb(geno_link_modul)
### Null model analysis. Taken from Dormann and Strauss 2013; Methods in Ecology and Evolution supplement. Note that I did receive a warning indicating that "Some empty columns or rows were deleted"... This take a while to run so don't do it every time!
#null.geno_link <- nullmodel(geno_link_net_sub_noSurv, N = 100, method = "r2d")
#modules.null <- sapply(null.geno_link, computeModules)
#like.nulls <- sapply(modules.null, function(x) x@likelihood)
#(z.geno_link <- (geno_link_modul@likelihood - mean(like.nulls))/sd(like.nulls)) # last z-score = 9.53! values > ~2 are evidnence of significance.
############ CODE BELOW NEEDS TO BE REVIEWED AND MODIFIED
#### Gall-parasitoid network for each genotype (sum all samples within genotype). Right now, this does not account for differences in number of shoots sampled between genotypes (which is likely small)
geno_net <- cast(gall_net_melt, gall.sp ~ gall_contents | Genotype, sum)
geno_net <- geno_net[c(1:3,5:27)]# remove genotype C as it was never part of the dataset
geno_net_new <- list()
for(i in 1:length(geno_net)){
tmp <- geno_net[[i]][,-c(1:6)] # remove gall.sp and surviving gall larva data.
geno_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(geno_net_new[[i]]) <- geno_net[[i]][,1]
} # empty.col functions removes parasitoids with no interactions but preserves basal species that were observed in the network.
geno_net_metrics <- list()
for(i in 1:length(geno_net_new)){
geno_net_metrics[[i]] <- network_metrics(as.matrix(geno_net_new[[i]]))
}
geno_net_data <- ldply(geno_net_metrics)
geno_net_data <- transform(geno_net_data, Geno.ID = c("*","A","B",LETTERS[4:26]), pred.preyRich = predRich/preyRich)
# Plot relationships among network metrics.
scatterplotMatrix(geno_net_data[,c(1:7,9)])
##### Create networks for each plant position
# create data frames
pp_net <- cast(gall_net_melt, gall.sp ~ gall_contents | plant.position.new, sum) # network for each plant position
pp_gall.ptoid.comm <- dcast(gall_net_melt, plant.position.new ~ gall_contents, sum) # community composition of surviving insects
colnames(pp_gall.ptoid.comm)[1] <- "pp" # for joining with other datasets later
# run loop to remove unwanted columns and change rownames of network level data
pp_net_new <- list()
for(i in 1:length(pp_net)){
tmp <- pp_net[[i]][,-c(1:6)] # # remove gall.sp and surviving gall larva data.
pp_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(pp_net_new[[i]]) <- pp_net[[i]][,1]
} # empty.col functions removes parasitoids with no interactions but preserves basal species that were observed in the network.
# calculate network metrics at each plant position
pp_net_metrics <- list()
for(i in 1:length(pp_net_new)){
pp_net_metrics[[i]] <- network_metrics(as.matrix(pp_net_new[[i]]))
}
pp_net_data <- ldply(pp_net_metrics) # turn it into a dataframe
# run for loop to extract plant position ID from all networks
pp <- vector()
for(i in 1:length(pp_net)){
pp[i] <- names(pp_net[i])
}
pp_net_data_trans <- transform(pp_net_data, pp = pp, pred.preyRich = predRich/preyRich) # add plant position ID and predator:prey richness ratios
### merge Gender and Genotype info into pp_net_data as well as shoot count estimates. Add some new variables too.
pp.info <- data.frame(pp = paste("pp",plant.position.info$Plant.Position,sep=""),Geno.ID = plant.position.info$Genotype, Sex = plant.position.info$Gender)
shoot.count.data <- data.frame(pp = paste("pp", shoot.countEst$Plant.Position,sep=""), shootEst.all = shoot.countEst$shootEst.all, shoot.countEst.no18 = shoot.countEst$shootEst.no18, Galls.found = shoot.countEst$Galls.found)
# create list of all dataframes
pp_dfs = list(shoot.count.data, pp_net_data_trans,pp_gall.ptoid.comm, pp.info)
pp_net_data_merge <- join_all(pp_dfs, by="pp", type = "left")
pp_net_data_merge[which(pp_net_data_merge$Galls.found == 0),]
str(pp_net_data_merge)
pp_net_data_merge <- transform(pp_net_data_merge, connect_wt_NAzero = connect_wt)
pp_net_data_merge$connect_wt_NAzero[which(is.nan(pp_net_data_merge$connect_wt_NAzero))] <- 0 # since these values had galls but no observed parasitoids, I believe the connectance should be zero...
scatterplotMatrix(subset(net_focal, gall.sp == "vLG", select = g.height:g.3meas))
gall.size.pca <- rda(subset(net_focal, gall.sp == "vLG", select = g.height:g.3meas))
gall.size.pca <- rda(subset(net_focal, gall.sp == "vLG", select = g.height:g.3meas), na.action = na.omit)
gall.size.pca <- rda(na.omit(subset(net_focal, gall.sp == "vLG", select = g.height:g.3meas)))
summary(gall.size.pca)
vLG.size.pca <- rda(na.omit(subset(net_focal, gall.sp == "vLG", select = g.height:g.3meas)))
summary(vLG.size.pca)
plot(vLG.size.pca)
plot(vLG.size.pca, display="sp")
vLG.size.data <- na.omit(subset(net_focal, gall.sp == "vLG", select = g.height:g.3meas))
vLG.size.data
dim(vLG.size.data)
vLG.size.pca <- rda(vLG.size.data)
summary(vLG.size.pca)
vLG.size.pca$inertia
summary(vLG.size.pca)
plot(vLG.size.pca, display="sp")
dim(vLG.size.data)
vLG.size.data <- na.omit(subset(net_focal, gall.sp == "vLG", select = g.height:g.width))
dim(vLG.size.data)
vLG.size.pca <- rda(vLG.size.data)
summary(vLG.size.pca)
plot(vLG.size.pca, display="sp")
scatterplotMatrix(subset(net_focal, gall.sp == "rG", select = g.height:g.3meas))
rG.size.data <- na.omit(subset(net_focal, gall.sp == "rG", select = g.height:g.width))
rG.size.pca <- rda(rG.size.data)
summary(rG.size.pca)
plot(rG.size.pca, display="sp")
rG.size.data <- na.omit(subset(net_focal, gall.sp == "rG", select = g.height:g.3meas))
rG.size.pca <- rda(rG.size.data)
summary(rG.size.pca)
plot(rG.size.pca, display="sp")
scatterplotMatrix(subset(net_focal, gall.sp == "rsLG", select = g.height:g.3meas))
rsLG.size.data <- na.omit(subset(net_focal, gall.sp == "rsLG", select = g.height:g.3meas))
rsLG.size.pca <- rda(rsLG.size.data)
summary(rsLG.size.pca)
plot(rsLG.size.pca, display="sp")
scatterplotMatrix(subset(net_focal, gall.sp == "SG", select = g.height:g.3meas))
SG.size.data <- na.omit(subset(net_focal, gall.sp == "SG", select = g.height:g.3meas))
SG.size.pca <- rda(SG.size.data)
summary(SG.size.pca)
plot(SG.size.pca, display="sp")
scatterplotMatrix(subset(net_focal, gall.sp == "aSG", select = g.height:g.3meas))
aSG.size.data <- na.omit(subset(net_focal, gall.sp == "aSG", select = g.height:g.3meas))
aSG.size.pca <- rda(aSG.size.data)
summary(aSG.size.pca)
plot(aSG.size.pca, display="sp")
vLG.size.data <- na.omit(subset(net_focal, gall.sp == "vLG", select = g.height:g.width))
scatterplotMatrix(vLG.size.data)
rG.size.data <- na.omit(subset(net_focal, gall.sp == "rG", select = g.height:g.width))
scatterplotMatrix(rG.size.data)
cor(rG.size.data$g.height, rG.size.data$g.width)
scatterplotMatrix(rsLG.size.data)
rsLG.size.data <- na.omit(subset(net_focal, gall.sp == "rsLG", select = g.height:g.width))
scatterplotMatrix(rsLG.size.data)
SG.size.data <- na.omit(subset(net_focal, gall.sp == "SG", select = g.height:g.width))
scatterplotMatrix(SG.size.data)
SG.size.pca <- rda(SG.size.data)
summary(SG.size.pca)
plot(SG.size.pca, display="sp")
aSG.size.data <- na.omit(subset(net_focal, gall.sp == "aSG", select = g.height:g.width))
scatterplotMatrix(aSG.size.data)
aSG.size.pca <- rda(aSG.size.data)
summary(aSG.size.pca)
plot(aSG.size.pca, display="sp")
scatterplotMatrix(aSG.size.data)
aSG.size.data <- subset(net_focal, gall.sp == "aSG", select = g.height:g.width)
scatterplotMatrix(aSG.size.data) # not really correlated with each other...
aSG.size.pca <- rda(aSG.size.data)
aSG.size.data
aSG.size.data <- na.omit(subset(net_focal, gall.sp == "aSG", select = g.height:g.width))
aSG.size.data
scores(aSG.size.pca)
scores(aSG.size.pca,'sites')
scores(aSG.size.pca,display="sites")
rbind.data.frame(scores(vLG.size.pca, display="sites"), scores(rG.size.pca, display="sites"), scores(rsLG.size.pca, display="sites"), scores(SG.size.pca, display="sites"), scores(aSG.size.pca,display="sites"))
size.PCs <- rbind.data.frame(scores(vLG.size.pca, display="sites"), scores(rG.size.pca, display="sites"), scores(rsLG.size.pca, display="sites"), scores(SG.size.pca, display="sites"), scores(aSG.size.pca,display="sites"))
size.PCs <- transform(size.PCs, id = rownames(size.PCs))
size.PCs
net_focal$id = rownames(net_focal)
dimnames(net_focal)
net_focal <- join(net_focal, size.PCs, by="id")
dimnames(net_focal)
dim(net_focal)
dim(size.PCs)
net_focal$PC1
cbind(net_focal$id, net_focal$PC1)
size.PCs
str(size.PCs)
str(net_focal)
net_focal$id = factor(rownames(net_focal))
net_focal <- join(net_focal, size.PCs, by="id")
net_focal$PC1
######## Tree level Network, Community, and Species level analysis
#### upload necessary packages
# data manipulation
library(reshape)
library(reshape2)
library(plyr)
# plotting
library(ggplot2)
library(car) # for scatterplot matrices
# network analysis
library(bipartite)
### source in required functions
source('~/Documents/Genotype_Networks/data/fxns_networks.R')
### Upload necessary data
# upload plant position info
plant.position.info <- read.csv("~/Documents/Genotype_Willow_Community/datasets_&_Rscripts/Willow Garden Positions.csv")
# upload complete network data
complete_network_data <- read.csv("~/Documents/Genotype_Networks/data/complete_network_data.csv")
# Shoot count estimates as well as plant positions where zero galls were collected
shoot.countEst <- read.csv("~/Documents/Genotype_Networks/data/survey_2_stem_diams_shootEsts.csv")
### Create data frame of interest
net_focal <- subset(complete_network_data, select = c("Gender","Genotype","plant.position.new","X","gall.sp","gall.id","point.count","g.height","g.width","g.3meas","vLG.pupa","rG.surv","Pont.surv","SG.larv","aSG.larv","Eury.tot","Tory.tot","Meso.tot","Eulo.tot","Lathro.tot","Mymarid","Lestodip","Platy","g.total"))
### Visualize relationship among gall measurement variables. I first explored PCAs with all three gall measurements, however, g.3meas never appeared to contribute unique information. And since I only have g.3meas for a subset of the galls, I have decided to omit it from future analysis and only conduct PCAs on g.height and g.width.
# vLG
vLG.size.data <- na.omit(subset(net_focal, gall.sp == "vLG", select = g.height:g.width))
scatterplotMatrix(vLG.size.data)
vLG.size.pca <- rda(vLG.size.data)
summary(vLG.size.pca)
plot(vLG.size.pca, display="sp")
# rG
rG.size.data <- na.omit(subset(net_focal, gall.sp == "rG", select = g.height:g.width))
scatterplotMatrix(rG.size.data)
rG.size.pca <- rda(rG.size.data)
summary(rG.size.pca)
plot(rG.size.pca, display="sp")
# rsLG
rsLG.size.data <- na.omit(subset(net_focal, gall.sp == "rsLG", select = g.height:g.width))
scatterplotMatrix(rsLG.size.data)
rsLG.size.pca <- rda(rsLG.size.data)
summary(rsLG.size.pca)
plot(rsLG.size.pca, display="sp")
# SG
SG.size.data <- na.omit(subset(net_focal, gall.sp == "SG", select = g.height:g.width))
scatterplotMatrix(SG.size.data)
SG.size.pca <- rda(SG.size.data)
summary(SG.size.pca)
plot(SG.size.pca, display="sp")
# aSG
aSG.size.data <- na.omit(subset(net_focal, gall.sp == "aSG", select = g.height:g.width))
scatterplotMatrix(aSG.size.data) # not really correlated with each other...
aSG.size.pca <- rda(aSG.size.data)
summary(aSG.size.pca)
plot(aSG.size.pca, display="sp")
###### Finalize data set and melt it
size.PCs <- rbind.data.frame(scores(vLG.size.pca, display="sites"), scores(rG.size.pca, display="sites"), scores(rsLG.size.pca, display="sites"), scores(SG.size.pca, display="sites"), scores(aSG.size.pca,display="sites"))
size.PCs <- transform(size.PCs, id = rownames(size.PCs))
net_focal$id = factor(rownames(net_focal))
net_focal <- join(net_focal, size.PCs, by="id")
net_focal$PC1
gall_net_melt <- melt(net_focal, id.vars = c("Genotype","Gender","plant.position.new","X","gall.sp","gall.id","point.count","g.total","g.height","g.width","PC1","PC2"), variable_name = "gall_contents") # preserve zeros for network analysis, because they identify herbivores that were present, just not connected to any parasitoids.
### Regional-scale network (all tree samples summed together).
total_net <- dcast(gall_net_melt, gall.sp ~ gall_contents, sum)
rownames(total_net) <- total_net[ ,1]
total_net_ptoids <- subset(total_net, select=Eury.tot:Platy) # remove gall.sp
gall_abunds <- rowSums(total_net[,-1])
names(gall_abunds) <- rownames(total_net)
visweb(total_net_ptoids, type="diagonal") # Compartments sort according to phylogeny
plotweb(total_net_ptoids, low.abun = gall_abunds - rowSums(total_net_ptoids), abuns.type = "additional")
networklevel(total_net_ptoids)
### Genotype level network with gall-parasitoid links. Need to account for number of shoots sampled on each genotype.
geno_link_net <- dcast(gall_net_melt, Genotype ~ gall.sp + gall_contents, sum)
geno_link_net_sub <- geno_link_net[ ,-1]
rownames(geno_link_net_sub) <- geno_link_net$Genotype
geno_link_net_sub <- geno_link_net_sub[ ,-which(colSums(geno_link_net_sub) == 0)]
geno_link_net_sub_noSurv <- geno_link_net_sub[ ,-c(1,3,9,12,14)]
networklevel(geno_link_net_sub_noSurv)
visweb(geno_link_net_sub_noSurv, type="diagonal")
visweb(geno_link_net_sub_noSurv, type="nested")
plotweb(geno_link_net_sub_noSurv)
# create a list with 100 of the same geno.link data frame to calculate and identify the maximum modularity value.
geno_link_samelist <- list()
for(i in 1:100){
geno_link_samelist[[i]] <- geno_link_net_sub_noSurv
}
### Still need to try this code after I account for shoot estimates. It will probably take a very long time, which is why I have coded it out. Identify iteration generating the maximum modularity value "Q". Note that any adjustments here should also occur for the null model below!!!
#vector.Q_geno_link <- sapply(geno_link_samelist, computeModules)
#max.Q_geno_link <- sapply(vector.Q_geno_link, function(x) max(x@likelihood))
# czvalues(geno_link_modul, weighted = TRUE) # defaults to hight trophic level. Note this function remains experimental and still unclear of its relevance to quantitative bipartite networks...
# plotModuleWeb(geno_link_modul)
### Null model analysis. Taken from Dormann and Strauss 2013; Methods in Ecology and Evolution supplement. Note that I did receive a warning indicating that "Some empty columns or rows were deleted"... This take a while to run so don't do it every time!
#null.geno_link <- nullmodel(geno_link_net_sub_noSurv, N = 100, method = "r2d")
#modules.null <- sapply(null.geno_link, computeModules)
#like.nulls <- sapply(modules.null, function(x) x@likelihood)
#(z.geno_link <- (geno_link_modul@likelihood - mean(like.nulls))/sd(like.nulls)) # last z-score = 9.53! values > ~2 are evidnence of significance.
############ CODE BELOW NEEDS TO BE REVIEWED AND MODIFIED
#### Gall-parasitoid network for each genotype (sum all samples within genotype). Right now, this does not account for differences in number of shoots sampled between genotypes (which is likely small)
geno_net <- cast(gall_net_melt, gall.sp ~ gall_contents | Genotype, sum)
geno_net <- geno_net[c(1:3,5:27)]# remove genotype C as it was never part of the dataset
geno_net_new <- list()
for(i in 1:length(geno_net)){
tmp <- geno_net[[i]][,-c(1:6)] # remove gall.sp and surviving gall larva data.
geno_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(geno_net_new[[i]]) <- geno_net[[i]][,1]
} # empty.col functions removes parasitoids with no interactions but preserves basal species that were observed in the network.
geno_net_metrics <- list()
for(i in 1:length(geno_net_new)){
geno_net_metrics[[i]] <- network_metrics(as.matrix(geno_net_new[[i]]))
}
geno_net_data <- ldply(geno_net_metrics)
geno_net_data <- transform(geno_net_data, Geno.ID = c("*","A","B",LETTERS[4:26]), pred.preyRich = predRich/preyRich)
# Plot relationships among network metrics.
scatterplotMatrix(geno_net_data[,c(1:7,9)])
##### Create networks for each plant position
# create data frames
pp_net <- cast(gall_net_melt, gall.sp ~ gall_contents | plant.position.new, sum) # network for each plant position
pp_gall.ptoid.comm <- dcast(gall_net_melt, plant.position.new ~ gall_contents, sum) # community composition of surviving insects
colnames(pp_gall.ptoid.comm)[1] <- "pp" # for joining with other datasets later
str(gall_net_melt)
str(net_focal)
net_focal <- subset(net_focal, select = c(Gender:g.width,vLG.pupa:g.total,PC1:PC2))
str(net_focal)
gall_net_melt <- melt(net_focal, id.vars = c("Genotype","Gender","plant.position.new","X","gall.sp","gall.id","point.count","g.total","g.height","g.width","PC1","PC2"), variable_name = "gall_contents") # preserve zeros for network analysis, because they identify herbivores that were present, just not connected to any parasitoids.
### Regional-scale network (all tree samples summed together).
total_net <- dcast(gall_net_melt, gall.sp ~ gall_contents, sum)
rownames(total_net) <- total_net[ ,1]
total_net_ptoids <- subset(total_net, select=Eury.tot:Platy) # remove gall.sp
gall_abunds <- rowSums(total_net[,-1])
names(gall_abunds) <- rownames(total_net)
visweb(total_net_ptoids, type="diagonal") # Compartments sort according to phylogeny
plotweb(total_net_ptoids, low.abun = gall_abunds - rowSums(total_net_ptoids), abuns.type = "additional")
networklevel(total_net_ptoids)
### Genotype level network with gall-parasitoid links. Need to account for number of shoots sampled on each genotype.
geno_link_net <- dcast(gall_net_melt, Genotype ~ gall.sp + gall_contents, sum)
geno_link_net_sub <- geno_link_net[ ,-1]
rownames(geno_link_net_sub) <- geno_link_net$Genotype
geno_link_net_sub <- geno_link_net_sub[ ,-which(colSums(geno_link_net_sub) == 0)]
geno_link_net_sub_noSurv <- geno_link_net_sub[ ,-c(1,3,9,12,14)]
geno_link_net_sub_noSurv
dimnames(geno_link_net_sub)
networklevel(geno_link_net_sub_noSurv)
visweb(geno_link_net_sub_noSurv, type="diagonal")
visweb(geno_link_net_sub_noSurv, type="nested")
plotweb(geno_link_net_sub_noSurv)
# create a list with 100 of the same geno.link data frame to calculate and identify the maximum modularity value.
geno_link_samelist <- list()
for(i in 1:100){
geno_link_samelist[[i]] <- geno_link_net_sub_noSurv
}
geno_net <- cast(gall_net_melt, gall.sp ~ gall_contents | Genotype, sum)
geno_net <- geno_net[c(1:3,5:27)]# remove genotype C as it was never part of the dataset
geno_net_new <- list()
for(i in 1:length(geno_net)){
tmp <- geno_net[[i]][,-c(1:6)] # remove gall.sp and surviving gall larva data.
geno_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(geno_net_new[[i]]) <- geno_net[[i]][,1]
}
geno_net
str(gall_net_melt)
geno_net <- cast(gall_net_melt, gall.sp ~ gall_contents | Genotype, sum)
geno_net
geno_net_new <- list()
for(i in 1:length(geno_net)){
tmp <- geno_net[[i]][,-c(1:6)] # remove gall.sp and surviving gall larva data.
geno_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(geno_net_new[[i]]) <- geno_net[[i]][,1]
} # empty.col functions removes parasitoids with no interactions but preserves basal s
geno_net_new
geno_net_metrics <- list()
for(i in 1:length(geno_net_new)){
geno_net_metrics[[i]] <- network_metrics(as.matrix(geno_net_new[[i]]))
}
geno_net_data <- ldply(geno_net_metrics)
geno_net_data <- transform(geno_net_data, Geno.ID = c("*","A","B",LETTERS[4:26]), pred.preyRich = predRich/preyRich)
geno_net_data
scatterplotMatrix(geno_net_data[,c(1:7,9)])
pp_net <- cast(gall_net_melt, gall.sp ~ gall_contents | plant.position.new, sum) # network for each plant position
pp_net
pp_gall.ptoid.comm <- dcast(gall_net_melt, plant.position.new ~ gall_contents, sum) # community composition of surviving insects
colnames(pp_gall.ptoid.comm)[1] <- "pp" # for joining with other datasets later
pp_gall.ptoid.comm
pp_gall.size <- dcast(gall_net_melt, plant.position.new ~ gall.sp + g.height, mean)
pp_gall.size
pp_gall.size <- dcast(gall_net_melt, plant.position.new ~ gall.sp, mean, value.var = "g.height")
pp_gall.size
pp_gall.width <- dcast(gall_net_melt, plant.position.new ~ gall.sp, mean, value.var = "g.width")
pp_gall.width
pp_gall.sizePC1 <- dcast(gall_net_melt, plant.position.new ~ gall.sp, mean, value.var = "PC1")
pp_gall.sizePC1
pp_gall.sizePC2 <- dcast(gall_net_melt, plant.position.new ~ gall.sp, mean, value.var = "PC2")
pp_gall.height <- dcast(gall_net_melt, plant.position.new ~ gall.sp, mean, value.var = "g.height")
paste("height",colnames(pp_gall.height),sep=".")
colnames(pp_gall.height) <- c("pp", paste("height",colnames(pp_gall.height)[-1],sep="."))
pp_gall.height
colnames(pp_gall.width) <- c("pp", paste("width",colnames(pp_gall.width)[-1],sep="."))
colnames(pp_gall.sizePC1) <- c("pp", paste("PC1",colnames(pp_gall.sizePC1)[-1],sep="."))
colnames(pp_gall.PC2) <- c("pp", paste("PC2",colnames(pp_gall.sizePC2)[-1],sep="."))
colnames(pp_gall.sizePC2) <- c("pp", paste("PC2",colnames(pp_gall.sizePC2)[-1],sep="."))
# run loop to remove unwanted columns and change rownames of network level data
pp_net_new <- list()
for(i in 1:length(pp_net)){
tmp <- pp_net[[i]][,-c(1:6)] # # remove gall.sp and surviving gall larva data.
pp_net_new[[i]] <- as.data.frame(empty.col(tmp))
rownames(pp_net_new[[i]]) <- pp_net[[i]][,1]
} # empty.col functions removes parasitoids with no interactions but preserves basal species that were observed in the network.
# calculate network metrics at each plant position
pp_net_metrics <- list()
for(i in 1:length(pp_net_new)){
pp_net_metrics[[i]] <- network_metrics(as.matrix(pp_net_new[[i]]))
}
pp_net_data <- ldply(pp_net_metrics) # turn it into a dataframe
# run for loop to extract plant position ID from all networks
pp <- vector()
for(i in 1:length(pp_net)){
pp[i] <- names(pp_net[i])
}
pp_net_data_trans <- transform(pp_net_data, pp = pp, pred.preyRich = predRich/preyRich) # add plant position ID and predator:prey richness ratios
### merge Gender and Genotype info into pp_net_data as well as shoot count estimates. Add some new variables too.
pp.info <- data.frame(pp = paste("pp",plant.position.info$Plant.Position,sep=""),Geno.ID = plant.position.info$Genotype, Sex = plant.position.info$Gender)
shoot.count.data <- data.frame(pp = paste("pp", shoot.countEst$Plant.Position,sep=""), shootEst.all = shoot.countEst$shootEst.all, shoot.countEst.no18 = shoot.countEst$shootEst.no18, Galls.found = shoot.countEst$Galls.found)
# create list of all dataframes
pp_dfs = list(shoot.count.data, pp_net_data_trans,pp_gall.ptoid.comm, pp_gall.height, pp_gall.width, pp_gall.sizePC1, pp_gall.sizePC2, pp.info)
pp_net_data_merge <- join_all(pp_dfs, by="pp", type = "left")
pp_net_data_merge
str(pp_net_data_merge)
pp_net_data_merge[which(pp_net_data_merge$Galls.found == 0),] # Right now, 77 is a mystery (field notes suggest no galls, but there is a gall collection (possibly from survey #1???)).  Right now, I've decided to keep it in the dataset.
pp_net_data_merge <- transform(pp_net_data_merge, connect_wt_NAzero = connect_wt)
pp_net_data_merge$connect_wt_NAzero[which(is.nan(pp_net_data_merge$connect_wt_NAzero))] <- 0 # since these values had galls but no observed parasitoids, I believe the connectance should be zero...
pp_net_summary <- ddply(pp_net_data_merge, .(Geno.ID), summarize, mean_gallRich = mean(preyRich), mean_ptoidRich = mean(predRich))
max(pp_net_summary$mean_gallRich)
min(pp_net_summary$mean_gallRich)
max(pp_net_summary$mean_ptoidRich)
min(pp_net_summary$mean_ptoidRich)
dimnames(pp_net_data_merge)
vLG.height <- lm(height.vLG ~ Genotype, pp_net_data_merge)
vLG.height <- lm(height.vLG ~ Geno.ID, pp_net_data_merge)
summary(vLG.height)
plot(height.vLG ~ Geno.ID, pp_net_data_merge)
